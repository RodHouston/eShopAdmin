[{"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/index.js":"1","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/App.js":"2","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/home/Home.jsx":"3","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/sidebar/Sidebar.jsx":"4","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/userList/UserList.jsx":"5","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/topbar/Topbar.jsx":"6","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/newUser/NewUser.jsx":"7","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/product/Product.jsx":"8","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/user/User.jsx":"9","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/newProduct/NewProduct.jsx":"10","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/productList/ProductList.jsx":"11","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/dummyData.js":"12","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/featuredInfo/FeaturedInfo.jsx":"13","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/chart/Chart.jsx":"14","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/widgetSm/WidgetSm.jsx":"15","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/widgetLg/WidgetLg.jsx":"16","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/store.js":"17","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/userRedux.js":"18","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/login/Login.jsx":"19","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/apiCalls.js":"20","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/RequestMethods.js":"21","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/productRedux.js":"22","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/firebase.js":"23","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/designRedux.js":"24","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/newDesign/NewDesign.jsx":"25","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/designList/DesignList.jsx":"26","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/design/Design.jsx":"27","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/toFirebase.js":"28","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/productCategories/ProductCatList.jsx":"29","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/newProductCategory/NewProductCatergory.jsx":"30","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/productCategoryRedux.js":"31","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/photoGalleryRedux.js":"32","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/photoGallery/PhotoGallery.jsx":"33"},{"size":420,"mtime":1651508214254,"results":"34","hashOfConfig":"35"},{"size":3040,"mtime":1670983106705,"results":"36","hashOfConfig":"35"},{"size":1303,"mtime":1651515134935,"results":"37","hashOfConfig":"35"},{"size":3999,"mtime":1670982397974,"results":"38","hashOfConfig":"35"},{"size":2249,"mtime":1669949112963,"results":"39","hashOfConfig":"35"},{"size":963,"mtime":1651493908908,"results":"40","hashOfConfig":"35"},{"size":2169,"mtime":1670133914207,"results":"41","hashOfConfig":"35"},{"size":28579,"mtime":1670618682390,"results":"42","hashOfConfig":"35"},{"size":7250,"mtime":1669949006916,"results":"43","hashOfConfig":"35"},{"size":19884,"mtime":1670135267377,"results":"44","hashOfConfig":"35"},{"size":2059,"mtime":1670617778701,"results":"45","hashOfConfig":"35"},{"size":6167,"mtime":1651493734473,"results":"46","hashOfConfig":"35"},{"size":2123,"mtime":1651525761956,"results":"47","hashOfConfig":"35"},{"size":659,"mtime":1651493734471,"results":"48","hashOfConfig":"35"},{"size":1243,"mtime":1651515164585,"results":"49","hashOfConfig":"35"},{"size":1468,"mtime":1651515144680,"results":"50","hashOfConfig":"35"},{"size":1217,"mtime":1670982362527,"results":"51","hashOfConfig":"35"},{"size":2764,"mtime":1669923811714,"results":"52","hashOfConfig":"35"},{"size":938,"mtime":1669917795782,"results":"53","hashOfConfig":"35"},{"size":7714,"mtime":1670983484496,"results":"54","hashOfConfig":"35"},{"size":1083,"mtime":1670628588030,"results":"55","hashOfConfig":"35"},{"size":2731,"mtime":1670161767328,"results":"56","hashOfConfig":"35"},{"size":646,"mtime":1651538868115,"results":"57","hashOfConfig":"35"},{"size":2041,"mtime":1653444078410,"results":"58","hashOfConfig":"35"},{"size":7404,"mtime":1652844944804,"results":"59","hashOfConfig":"35"},{"size":2066,"mtime":1652846583846,"results":"60","hashOfConfig":"35"},{"size":19411,"mtime":1653443618387,"results":"61","hashOfConfig":"35"},{"size":5180,"mtime":1670591451966,"results":"62","hashOfConfig":"35"},{"size":2133,"mtime":1670810247533,"results":"63","hashOfConfig":"35"},{"size":10330,"mtime":1670799989613,"results":"64","hashOfConfig":"35"},{"size":2129,"mtime":1670810047860,"results":"65","hashOfConfig":"35"},{"size":2280,"mtime":1670983890994,"results":"66","hashOfConfig":"35"},{"size":5540,"mtime":1670988952781,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"rjd43m",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"70"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"70"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"137","messages":"138","errorCount":0,"warningCount":56,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":2,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/index.js",[],["145","146"],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/App.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/home/Home.jsx",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/sidebar/Sidebar.jsx",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/userList/UserList.jsx",["147"],"import \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { userRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {  userRequest } from \"../../RequestMethods\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../../redux/apiCalls\";\n\nexport default function UserList() {\n  const [data, setData] = useState(userRows);\n  \n  const dispatch = useDispatch()\n\n  const users = useSelector((state) => state.user.users)\n  const isFetch = useSelector((state) => state.user.isFetching)\n\nconsole.log(users);\n\n  useEffect(() => {\n    getUsers(dispatch)\n \n  }, [dispatch ])\n\nconsole.log(users);\n\nconst handleDelete = (id) => {\n  setData(data.filter((item) => item._id !== id));\n};\n\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 90 },\n    {\n      field: \"user\",\n      headerName: \"User\",\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"userListUser\">\n            <img className=\"userListImg\" src={params.row.img} alt=\"\" />\n            {params.row.username}\n          </div>\n        );\n      },\n    },\n    { field: \"email\", headerName: \"Email\", width: 200 },\n    {\n      field: \"isAdmin\",\n      headerName: \"isAdmin\",\n      width: 120,\n    },\n    // {\n    //   field: \"transaction\",\n    //   headerName: \"Transaction Volume\",\n    //   width: 160,\n    // },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={{pathname: \"/user/\" + params.row._id, query: {user : params.row}}}>\n              <button className=\"userListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"userListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n\n    !isFetch &&\n      <div className=\"userList\">\n      <DataGrid\n        rows={users}\n        disableSelectionOnClick\n        columns={columns}\n        getRowId ={row=>row._id }\n        pageSize={8}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/topbar/Topbar.jsx",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/newUser/NewUser.jsx",["148","149","150","151","152","153","154","155","156"],"import \"./newUser.css\";\nimport { useEffect, useState } from \"react\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from \"../../firebase\"\nimport { useDispatch } from \"react-redux\";\nimport {addUser} from '../../redux/apiCalls'\n\n\nexport default function NewUser() {\n\n\n\n  return (\n    <div className=\"newUser\">\n      <h1 className=\"newUserTitle\">New User</h1>\n      <form className=\"newUserForm\">\n        <div className=\"newUserItem\">\n          <label>Username</label>\n          <input type=\"text\" placeholder=\"john\" />\n        </div>\n        <div className=\"newUserItem\">\n          <label>Full Name</label>\n          <input type=\"text\" placeholder=\"John Smith\" />\n        </div>\n        <div className=\"newUserItem\">\n          <label>Email</label>\n          <input type=\"email\" placeholder=\"john@gmail.com\" />\n        </div>\n        <div className=\"newUserItem\">\n          <label>Password</label>\n          <input type=\"password\" placeholder=\"password\" />\n        </div>\n        <div className=\"newUserItem\">\n          <label>Phone</label>\n          <input type=\"text\" placeholder=\"+1 123 456 78\" />\n        </div>\n        <div className=\"newUserItem\">\n          <label>Address</label>\n          <input type=\"text\" placeholder=\"New York | USA\" />\n        </div>\n        <div className=\"newUserItem\">\n          <label>Gender</label>\n          <div className=\"newUserGender\">\n            <input type=\"radio\" name=\"gender\" id=\"male\" value=\"male\" />\n            <label for=\"male\">Male</label>\n            <input type=\"radio\" name=\"gender\" id=\"female\" value=\"female\" />\n            <label for=\"female\">Female</label>\n            <input type=\"radio\" name=\"gender\" id=\"other\" value=\"other\" />\n            <label for=\"other\">Other</label>\n          </div>\n        </div>\n        <div className=\"newUserItem\">\n          <label>Active</label>\n          <select className=\"newUserSelect\" name=\"active\" id=\"active\">\n            <option value=\"yes\">Yes</option>\n            <option value=\"no\">No</option>\n          </select>\n        </div>\n        <button className=\"newUserButton\">Create</button>\n      </form>\n    </div>\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/product/Product.jsx",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187"],"import { Link } from \"react-router-dom\";\nimport \"./product.css\";\nimport Chart from \"../../components/chart/Chart\"\nimport { productData } from \"../../dummyData\"\nimport { Publish } from \"@material-ui/icons\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { userRequest } from \"../../RequestMethods\";\nimport { addPhotosFireBase, addProducts, updateProducts } from \"../../redux/apiCalls\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL, deleteObject } from \"firebase/storage\";\nimport app from \"../../firebase\"\nimport { addPhotos, clearXPhotos } from \"../../redux/productRedux\";\n\nexport default function Product() {\n\n  const location = useLocation()\n  const productId = location.pathname.split('/')[2];\n  const [productStats, setProductStats] = useState([])\n\n  const product = useSelector((state) => state.product.products.find(product => product._id === productId))\n  const [prod, setPro] = useState(product)\n  const [inputs, setInputs] = useState(product)\n  const [file, setFile] = useState(product?.img)\n  const [cat, setCat] = useState(product.categories)\n  const [subCat, setSubCat] = useState(product.subCategories)\n  const [gender, setGender] = useState(product.gender)\n  const [color, setColor] = useState(product.color)\n  const [size, setSize] = useState(product.size)\n  const [salePrice, setSalePrice] = useState(0)\n\n  const extraPhotos = useSelector(state => state.product.extraPhotos)\n  const [isMainPhoto, setIsMainPhoto] = useState(false)\n  const [isExtraPhotos, setIsExtraPhoto] = useState(false)\n  const [isUploading, setIsUploading] = useState(false)\n\n  const [multiPhotosUpload, setMultiPhotosUpload] = useState([])\n\n  const moPho = ['', '', '', '']\n  moPho?.map((pro, idx) => {\n    // console.log(product.morePhotos[idx]);\n    if (product.morePhotos[idx] == undefined) {\n      moPho[idx] = '../photos/proPic.jpeg'\n    } else {\n      moPho[idx] = product.morePhotos[idx]\n    }\n  })\n  let mainPho = ''\n  if (product.img == '') {\n    mainPho = '../photos/proPic.jpeg'\n  } else {\n    mainPho = product.img\n  }\n\n  const [mainPhoto, setMainPhoto] = useState(mainPho)\n  const [mainPreviewFile, setMainPreviewFile] = useState(mainPho)\n\n  const [multiPhotos, setMultiPhotos] = useState(moPho)\n  const [previewFiles, setPreviewFiles] = useState(moPho)\n\n  const [wholeSalePrice1, setWholeSalePrice1] = useState(0)\n  const [wholeSaleQuantity1, setWholeSaleQuantity1] = useState(0)\n  const [wholeSalePrice2, setWholeSalePrice2] = useState(0)\n  const [wholeSaleQuantity2, setWholeSaleQuantity2] = useState(0)\n  const [wholeSalePrice3, setWholeSalePrice3] = useState(0)\n  const [wholeSaleQuantity3, setWholeSaleQuantity3] = useState(0)\n\n  const [wholeSaleToggle, setWholeSaleToggle] = useState(product?.isWholeSaleItem)\n  const [saleToggle, setSaleToggle] = useState(product?.onSale)\n\n  let photos = []\n  const dispatch = useDispatch()\n\n\n  const handleChange = (e) => {\n    setPro(prev => {\n      return { ...prev, [e.target.name]: e.target.value }\n    })\n    setInputs(prev => {\n      return { ...prev, [e.target.name]: e.target.value }\n    })\n  }\n\n  const handleWholeSaleDiv = (e) => {\n    if (e.target.value) {\n      setWholeSaleToggle(!wholeSaleToggle)\n      setInputs(prev => {\n        return { ...prev, [e.target.name]: e.target.value }\n      })\n    } else {\n      setWholeSaleToggle(!wholeSaleToggle)\n      setInputs(prev => {\n        return { ...prev, [e.target.name]: e.target.value }\n      })\n    }\n  }\n  const handleOnSale = (e) => {\n    if (e.target.value) {\n      setSaleToggle(!saleToggle)\n      setInputs(prev => {\n        return { ...prev, [e.target.name]: e.target.value }\n      })\n    } else {\n      setSaleToggle(!saleToggle)\n      setInputs(prev => {\n        return { ...prev, [e.target.name]: e.target.value }\n      })\n    }\n  }\n\n\n\n\n  const handleGender = (e) => {\n    try {\n      if (!gender.includes(e.target.value)) {\n\n        return (\n          setGender(gender => [...gender, e.target.value]))\n      } else if (gender.includes(e.target.value)) {\n        return (\n          gender?.map((c, index) => {\n\n            console.log('here');\n            if (c === e.target.value && !e.target.checked) {\n              console.log('found');\n              gender.splice(index, 1)\n              setGender(gender)\n            }\n          }))\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(gender);\n  }\n\n  const handleSubCat = (e) => {\n    try {\n      if (!subCat.includes(e.target.value)) {\n        return (\n          setSubCat(subCat => [...subCat, e.target.value]))\n      } else if (subCat.includes(e.target.value)) {\n        return (\n          subCat?.map((c, index) => {\n            console.log('here');\n            if (c === e.target.value && !e.target.checked) {\n              console.log('found');\n              subCat.splice(index, 1)\n              setSubCat(subCat)\n            }\n          }))\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(subCat);\n  }\n\n\n\n  const handleCat = (e) => {\n    try {\n      if (!cat.includes(e.target.value)) {\n        return (\n          setCat(cat => [...cat, e.target.value]))\n      } else if (cat.includes(e.target.value)) {\n        return (\n          cat?.map((c, index) => {\n            console.log('here');\n            if (c === e.target.value && !e.target.checked) {\n              console.log('found');\n              cat.splice(index, 1)\n              setCat(cat)\n            }\n          }))\n      }\n    } catch (error) {\n      console.log(error);\n    }\n    console.log(cat);\n  }\n\n  const handleColor = (e) => {\n    try {\n      if (!color.includes(e.target.value)) {\n        return (\n          setColor(color => [...color, e.target.value]))\n      } else if (color.includes(e.target.value)) {\n        return (\n          color?.map((c, index) => {\n            console.log('here');\n            if (c === e.target.value && !e.target.checked) {\n              console.log('found');\n              console.log(color);\n              color.splice(index, 1)\n              setColor(color)\n            }\n          }))\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(color);\n  }\n\n  const handleSize = (e) => {\n    try {\n      if (!size.includes(e.target.value)) {\n        return (\n          setSize(size => [...size, e.target.value]))\n      } else if (size.includes(e.target.value)) {\n        return (\n          size.map((c, index) => {\n            console.log('here');\n            if (c === e.target.value && !e.target.checked) {\n              console.log('found');\n              size.splice(index, 1)\n              setSize(size)\n            }\n          }))\n      }\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(size);\n  }\n\n\n  const handleWholeSaleQuantity1 = (e) => {\n    try {\n      setWholeSaleQuantity1(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n  const handleWholeSalePrice1 = (e) => {\n    try {\n      setWholeSalePrice1(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n  const handleWholeSaleQuantity2 = (e) => {\n    try {\n      setWholeSaleQuantity2(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n  const handleWholeSalePrice2 = (e) => {\n    try {\n      setWholeSalePrice2(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n\n\n  const handleWholeSaleQuantity3 = (e) => {\n    try {\n      setWholeSaleQuantity3(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n  const handleWholeSalePrice3 = (e) => {\n    try {\n      setWholeSalePrice3(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n\n  const handleMainPhoto = (e) => {\n    setIsMainPhoto(true)\n    // console.log(e);\n    let newMain = mainPho\n    newMain = e\n    let mainPre = mainPreviewFile\n    mainPre = URL.createObjectURL(e)\n    // console.log(newMain);\n    // console.log(mainPre);\n    setMainPhoto(newMain)\n    setMainPreviewFile(mainPre)\n  }\n\n  // console.log(previewFiles);\n  const handlePhotos = (e, idx) => {\n    setIsExtraPhoto(true)\n    let newMulti = multiPhotos.slice()\n    newMulti[idx] = e\n    let newPre = previewFiles.slice()\n    newPre[idx] = URL.createObjectURL(e)\n    // console.log(newPre[idx]);\n    setMultiPhotos(newMulti)\n    setPreviewFiles(newPre)\n  }\n\n\n\n  const storage = getStorage();\n\n  const clearPhotos = async (e) => {\n    e.preventDefault()\n\n    // // Create a reference to the file to delete\n    // const desertRef = ref(storage, 'images/desert.jpg');\n\n    // // Delete the file\n    // deleteObject(desertRef).then(() => {\n    //   // File deleted successfully\n    // }).catch((error) => {\n    //   // Uh-oh, an error occurred!\n    // });\n\n    const pro = {\n      ...inputs, img: '', morePhotos: [], salePrice: salePrice, categories: cat, color, size, gender, subCategories: subCat,\n      wholeSaleTier1: { wholeSaleQuantity1: wholeSaleQuantity1, wholePrice1: wholeSalePrice1 },\n      wholeSaleTier2: { wholeSaleQuantity2: wholeSaleQuantity2, wholePrice2: wholeSalePrice2 },\n      wholeSaleTier3: { wholeSaleQuantity3: wholeSaleQuantity3, wholePrice3: wholeSalePrice3 }\n    };\n    await updateProducts(pro._id, pro, dispatch)\n  }\n\n\n  const handleUpdate = async (photos) => {\n    let photoUpload = []\n    if (multiPhotosUpload.length <= 0) {\n      photoUpload = extraPhotos\n    } else if (multiPhotosUpload.length > 0) {\n      photoUpload = extraPhotos\n    }\n    const pro = {\n      ...inputs, img: file, morePhotos: photoUpload, salePrice: salePrice, categories: cat, color, size, gender, subCategories: subCat,\n      wholeSaleTier1: { wholeSaleQuantity1: wholeSaleQuantity1, wholePrice1: wholeSalePrice1 },\n      wholeSaleTier2: { wholeSaleQuantity2: wholeSaleQuantity2, wholePrice2: wholeSalePrice2 },\n      wholeSaleTier3: { wholeSaleQuantity3: wholeSaleQuantity3, wholePrice3: wholeSalePrice3 }\n    };\n    try {\n      console.log(\"input insde update\");\n      console.log(photoUpload);\n      console.log(extraPhotos);\n\n\n      // console.log(inputs);\n      await updateProducts(pro._id, pro, dispatch)\n\n    } catch (error) {\n      console.log(error);\n    }\n    console.log(\"Finished update\");\n    dispatch(clearXPhotos())\n  }\n\n  const handleAll = async (e) => {\n    e.preventDefault()\n    const pro = {\n      ...inputs, categories: cat, color, size, gender, subCategories: subCat,\n      wholeSaleTier1: { wholeSaleQuantity1: wholeSaleQuantity1, wholePrice1: wholeSalePrice1 },\n      wholeSaleTier2: { wholeSaleQuantity2: wholeSaleQuantity2, wholePrice2: wholeSalePrice2 },\n      wholeSaleTier3: { wholeSaleQuantity3: wholeSaleQuantity3, wholePrice3: wholeSalePrice3 }\n    };\n    console.log(\"running upload\");\n    // await upLoadPhoto()\n    await addPhotosFireBase(multiPhotos, mainPhoto, pro, isMainPhoto, isExtraPhotos, dispatch)\n  }\n\n  // const MONTHS = useMemo(\n  //   () => [\n  //     'Jan',\n  //     'Feb',\n  //     'Mar',\n  //     'Apr',\n  //     'May',\n  //     'Jun',\n  //     'Jul',\n  //     'Aug',\n  //     'Sep',\n  //     'Oct',\n  //     'Nov',\n  //     'Dec',\n  //   ],\n  //   [])\n\n  // useEffect(() => {\n  //   const getStats = async () => {\n  //     try {\n  //       const res = await userRequest.get('orders/income?pid=' + productId)\n  //       const list = res.data.sort((a, b) => {\n  //         return a._id - b._id\n  //       })\n  //       list.map((item) =>\n  //         setProductStats((prev) => [\n  //           ...prev,\n  //           { name: MONTHS[item._id - 1], Sales: item.total },\n  //         ])\n  //       )\n  //     } catch (error) { }\n  //   }\n  //   getStats()\n  // }, [MONTHS])\n\n  useEffect(() => {\n    const cleanPhoto = async () => {\n      dispatch(clearXPhotos())\n    }\n    cleanPhoto()\n  }, [])\n  useEffect(() => {\n    const GetPhoto = async () => {\n      // console.log(\"/In useEffect\");\n    }\n    GetPhoto()\n  }, [dispatch])\n  //  console.log(product.gender.includes('men'));     \n  //  console.log(wholeSaleToggle); \n\n  return (\n    <div className=\"product\">\n      <div className=\"productTitleContainer\">\n        <h1 className=\"productTitle\">Product</h1>\n        <Link to=\"/newproduct\">\n          <button className=\"productAddButton\">Create</button>\n        </Link>\n      </div>\n      <div className=\"productTop\">\n        <div className=\"productTopLeft\">\n          <Chart data={productStats} dataKey=\"Sales\" title=\"Sales Performance\" />\n        </div>\n\n        <div className=\"productTopRight\">\n          <div className=\"productInfoTop\">\n            <img src={mainPreviewFile} alt=\"\" className=\"productInfoImg\" />\n            <span className=\"productName\">{product.title}</span>\n          </div>\n          <div className=\"productInfoBottom\">\n            <div className=\"productInfoItem\">\n              <span className=\"productInfoKey\">{product._id}</span>\n              <span className=\"productInfoValue\">123</span>\n            </div>\n            <div className=\"productInfoItem\">\n              <span className=\"productInfoKey\">sales:</span>\n              <span className=\"productInfoValue\">5123</span>\n            </div>\n            <div className=\"productInfoItem\">\n              <span className=\"productInfoKey\">active:</span>\n              <span className=\"productInfoValue\">yes</span>\n            </div>\n            <div className=\"productInfoItem\">\n              <span className=\"productInfoKey\">in stock:</span>\n              <span className=\"productInfoValue\">{product.inStock}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"productBottom\">\n        <form className=\"productForm\">\n          <div className=\"productFormLeft\">\n            <div className=\" wholeSalePair\">\n              <div className=\"addProductItem\">\n                <label>Image</label>\n                <input type=\"file\" id=\"file\" onChange={e => handleMainPhoto(e.target.files[0])} />\n              </div>\n              <div className=\"productUpload\">\n                <img className=\"productPic\" src={mainPreviewFile} />\n                <label htmlFor=\"file\">\n                  <Publish />\n                </label>\n                <input type=\"file\" id=\"file\" style={{ display: \"none\" }} />\n              </div >\n            </div>\n\n\n\n            <div className=\"morePhotosContainer\">\n              {previewFiles.map((pho, idx) => (\n                <div className=\"extraPhotosBox\" key={idx}>\n                  <input type=\"file\" id=\"file\" onChange={e => handlePhotos(e.target.files[0], idx)} />\n                  <img className=\"extraPhoto\" src={pho} />\n                </div>\n              ))\n              }\n              <button onClick={clearPhotos}>Clear photos</button>\n            </div>\n\n\n\n            <div className=\" wholeSalePair\">\n              <div className=\"addProductItem\">\n                <label>Title</label>\n                <input name='title' type=\"text\" defaultValue={product.title} onChange={handleChange} />\n              </div>\n              <div className=\"addProductItem\">\n                <label>Price</label>\n                <input name='price' type=\"number\" defaultValue={product.price} onChange={handleChange} />\n              </div>\n            </div>\n            <div className=\" wholeSalePair\">\n              <div className=\"addProductItem\">\n                <label>On Sale?</label>\n                <select name='onSale' defaultValue={product.onSale} onChange={handleOnSale} >\n                  <option value='true'>Yes</option>\n                  <option value='false'>No</option>\n                </select>\n              </div>\n\n              <div className=\"addProductItem\" >\n                <label >Sale Price</label>\n                <input style={{ width: saleToggle ? '40%' : '0%' }} disabled={!saleToggle}\n                  name='salePrice'\n                  type=\"number\" \n                  defaultValue={product.salePrice} \n                  onChange={handleChange}\n                />\n              </div>\n            </div>\n            <div className=\" wholeSalePair\">\n              <div className=\"addProductItem\">\n                <label>Can be printed on?</label>\n                <select name='isPrintItem' defaultValue={product.isPrintItem} onChange={handleChange} >\n                  <option value='true'>Yes</option>\n                  <option value='false'>No</option>\n                </select>\n              </div>\n            </div>\n            <div className=\" wholeSaleDiv\" style={{ height: wholeSaleToggle ? '226px' : '50px' }}>\n              <div className=\"wholeSaleItem\">\n                <label>Is this a WholeSale Item?</label>\n                <select name='isWholeSaleItem' defaultValue={product.isWholeSaleItem} onChange={handleWholeSaleDiv} >\n                  <option value='true'>Yes</option>\n                  <option value='false'>No</option>\n                </select>\n              </div>\n              <div className=\" wholeSalePair\">\n                <div className=\"wholeSaleItem leftInput\">\n                  <label>WholeSale Tier 1 Quantity</label>\n                  <input name='wholeSaleQuantity' type=\"number\" placeholder=\"3\" onChange={handleWholeSaleQuantity1} />\n                </div>\n                <div className='wholesaleText'>for $</div>\n                <div className=\"wholeSaleItem \">\n                  <label>WholeSale Tier 1 Price</label>\n                  <input name='wholeSalePrice' type=\"number\" placeholder=\"8.99\" onChange={handleWholeSalePrice1} />\n                </div>\n                <div className='wholesaleText'>each</div>\n              </div>\n              <div className=\" wholeSalePair\">\n                <div className=\"wholeSaleItem leftInput \">\n                  <label>WholeSale Tier 2 Quantity</label>\n                  <input name='wholeSaleQuantity' type=\"number\" placeholder=\"6\" onChange={handleWholeSaleQuantity2} />\n                </div>\n                <div className='wholesaleText'>for $</div>\n                <div className=\"wholeSaleItem \">\n                  <label>WholeSale Tier 2 Price</label>\n                  <input name='wholeSalePrice' type=\"number\" placeholder=\"6.99\" onChange={handleWholeSalePrice2} />\n                </div>\n                <div className='wholesaleText'>each</div>\n              </div>\n              <div className=\" wholeSalePair\">\n                <div className=\"wholeSaleItem leftInput\">\n                  <label>WholeSale Tier 3 Quantity</label>\n                  <input name='wholeSaleQuantity' type=\"number\" placeholder=\"9\" onChange={handleWholeSaleQuantity3} />\n                </div>\n                <div className='wholesaleText'>for $</div>\n                <div className=\"wholeSaleItem\">\n                  <label>WholeSale Tier 3 Price</label>\n                  <input name='wholeSalePrice' type=\"number\" placeholder=\"4.99\" onChange={handleWholeSalePrice3} />\n                </div>\n                <div className='wholesaleText'>each</div>\n              </div>\n            </div>\n            <label>Description</label>\n            <textarea name='desc' className='txtArea' rows=\"4\" cols=\"50\" defaultValue={product.desc} onChange={handleChange}></textarea>\n            <div className=\" wholeSalePair\">\n              <div className=\"catDivs\">\n                <label>Gender</label>\n                <ul className=\"checkbox-grids\" name='gender' onChange={handleGender}>\n                  <li><input type=\"checkbox\" name='gender' value=\"boys\" defaultChecked={product.gender.includes('boys')} /><label htmlFor=\"text1\">Boys</label></li>\n                  <li><input type=\"checkbox\" name='gender' value=\"girls\" defaultChecked={product.gender.includes('girls')} /><label htmlFor=\"text1\">Girls</label></li>\n                  <li><input type=\"checkbox\" name='gender' value=\"ladies\" defaultChecked={product.gender.includes('ladies')} /><label htmlFor=\"text2\">Women</label></li>\n                  <li><input type=\"checkbox\" name='gender' value=\"men\" defaultChecked={product.gender.includes('men')} /><label htmlFor=\"text3\">Men</label></li>\n                  <li><input type=\"checkbox\" name='gender' value=\"unisex\" defaultChecked={product.gender.includes('unisex')} /><label htmlFor=\"text3\">Unisex</label></li>\n                </ul>\n              </div>\n              <div className=\"catDivs\">\n                <label>Category</label>\n                <ul className=\"checkbox-grids\" name='categories' onChange={handleCat}>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"tops\" defaultChecked={product.categories.includes('tops')} /><label htmlFor=\"text1\">Top</label></li>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"bottoms\" defaultChecked={product.categories.includes('bottoms')} /><label htmlFor=\"text2\">Bottom</label></li>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"sets\" defaultChecked={product.categories.includes('sets')} /><label htmlFor=\"text3\">Sets</label></li>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"jewlery\" defaultChecked={product.categories.includes('jewelry')} /><label htmlFor=\"text6\">Jewlery</label></li>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"sale\" defaultChecked={product.categories.includes('sale')} /><label htmlFor=\"text7\">Sale</label></li>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"other\" defaultChecked={product.categories.includes('other')} /><label htmlFor=\"text8\">Other</label></li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"catDivs\">\n              <label>Sub-Category</label>\n              <ul className=\"checkbox-grids\" name='subCategories' onChange={handleSubCat}>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"graphic tshirts\" defaultChecked={product.subCategories.includes('graphic tshirts')} /><label htmlFor=\"text7\">Graphic TShirt</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"short sleeve shirts\" defaultChecked={product.subCategories.includes('short sleeve shirts')} /><label htmlFor=\"text1\">Short Sleeve Shirt</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"long sleeve shirts\" defaultChecked={product.subCategories.includes('long sleeve shirts')} /><label htmlFor=\"text2\">Long Sleeve Shirt</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"sweaters\" defaultChecked={product.subCategories.includes('sweaters')} /><label htmlFor=\"text3\">Sweater</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"hoodies\" defaultChecked={product.subCategories.includes('hoodies')} /><label htmlFor=\"text4\">Hoodies</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"shorts\" defaultChecked={product.subCategories.includes('shorts')} /><label htmlFor=\"text5\">Shorts</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"pants\" defaultChecked={product.subCategories.includes('pants')} /><label htmlFor=\"text6\">Pants</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"jeans\" defaultChecked={product.subCategories.includes('jeans')} /><label htmlFor=\"text7\">Jeans</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"sweats\" defaultChecked={product.subCategories.includes('sweats')} /><label htmlFor=\"text7\">Sweat Pants</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"leggings\" defaultChecked={product.subCategories.includes('leggings')} /><label htmlFor=\"text7\">Leggings</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"rompers\" defaultChecked={product.subCategories.includes('rompers')} /><label htmlFor=\"text8\">Rompers</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"pajamas\" defaultChecked={product.subCategories.includes('pajamas')} /><label htmlFor=\"text6\">Pajamas</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"sweatsuits\" defaultChecked={product.subCategories.includes('sweatsuits')} /><label htmlFor=\"text7\">Sweatsuits</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"necklaces\" defaultChecked={product.subCategories.includes('necklaces')} /><label htmlFor=\"text8\">Necklace</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"bracelets\" defaultChecked={product.subCategories.includes('bracelets')} /><label htmlFor=\"text6\">Braclete</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"rings\" defaultChecked={product.subCategories.includes('rings')} /><label htmlFor=\"text7\">Ring</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"other\" defaultChecked={product.subCategories.includes('other')} /><label htmlFor=\"text8\">Other</label></li>\n              </ul>\n            </div>\n            <div className=\"catDivs\">\n              <label>Color</label>\n              <ul className=\"checkbox-grids\" name='color' onChange={handleColor}>\n                <li><input type=\"checkbox\" name=\"color\" value=\"black\" defaultChecked={product.color.includes('black')} /><label htmlFor=\"text1\">Black</label></li>\n                <li><input type=\"checkbox\" name=\"color\" value=\"white\" defaultChecked={product.color.includes('white')} /><label htmlFor=\"text2\">White</label></li>\n                <li><input type=\"checkbox\" name=\"color\" value=\"red\" defaultChecked={product.color.includes('red')} /><label htmlFor=\"text3\">Red</label></li>\n                <li><input type=\"checkbox\" name=\"color\" value=\"blue\" defaultChecked={product.color.includes('blue')} /><label htmlFor=\"text4\">Blue</label></li>\n                <li><input type=\"checkbox\" name=\"color\" value=\"yellow\" defaultChecked={product.color.includes('yellow')} /><label htmlFor=\"text5\">Yellow</label></li>\n                <li><input type=\"checkbox\" name=\"color\" value=\"green\" defaultChecked={product.color.includes('green')} /><label htmlFor=\"text6\">Green</label></li>\n                <li><input type=\"checkbox\" name=\"color\" value=\"pink\" defaultChecked={product.color.includes('pink')} /><label htmlFor=\"text7\">Pink</label></li>\n                <li><input type=\"checkbox\" name=\"color\" value=\"other\" defaultChecked={product.color.includes('other')} /><label htmlFor=\"text8\">Other</label></li>\n              </ul>\n            </div>\n            <div className=\"catDivs\">\n              <label>Size</label>\n              <ul className=\"checkbox-grids\" name='size' onChange={handleSize}>\n                <li><input type=\"checkbox\" name=\"size\" value=\"XS\" defaultChecked={product.size.includes('XS')} /><label htmlFor=\"text1\">XS</label></li>\n                <li><input type=\"checkbox\" name=\"size\" value=\"S\" defaultChecked={product.size.includes('S')} /><label htmlFor=\"text2\">S</label></li>\n                <li><input type=\"checkbox\" name=\"size\" value=\"M\" defaultChecked={product.size.includes('M')} /><label htmlFor=\"text3\">M</label></li>\n                <li><input type=\"checkbox\" name=\"size\" value=\"L\" defaultChecked={product.size.includes('L')} /><label htmlFor=\"text4\">L</label></li>\n                <li><input type=\"checkbox\" name=\"size\" value=\"XL\" defaultChecked={product.size.includes('XL')} /><label htmlFor=\"text5\">XL</label></li>\n                <li><input type=\"checkbox\" name=\"size\" value=\"XXL\" defaultChecked={product.size.includes('XXL')} /><label htmlFor=\"text6\">XXL</label></li>\n                <li><input type=\"checkbox\" name=\"size\" value=\"XXXL\" defaultChecked={product.size.includes('XXXL')} /><label htmlFor=\"text7\">XXXL</label></li>\n                <li><input type=\"checkbox\" name=\"size\" value=\"other\" defaultChecked={product.size.includes('other')} /><label htmlFor=\"text8\">Other</label></li>\n              </ul>\n            </div>\n            <div className=\" wholeSalePair\">\n              <div className=\"addProductItem\">\n                <label>Stock</label>\n                <select name='inStock' onChange={handleChange} >\n                  <option value='true'>Yes</option>\n                  <option value='false'>No</option>\n                </select>\n              </div>\n              <div className=\"addProductItem\">\n                <label>Inventory Count</label>\n                <input name='inventory' type=\"number\" defaultValue={product.inventory} onChange={handleChange} />\n              </div>\n            </div>\n            <button className=\"productButton\" onClick={handleAll}>Update</button >\n          </div>\n\n\n        </form>\n      </div>\n    </div>\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/user/User.jsx",["188","189","190"],"import {\n  CalendarToday,\n  LocationSearching,\n  MailOutline,\n  PermIdentity,\n  PhoneAndroid,\n  Publish,\n} from \"@material-ui/icons\";\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom/cjs/react-router-dom.min\";\nimport { getUserById, updateUser } from \"../../redux/apiCalls\";\nimport \"./user.css\";\n\nexport default function User() {\n\n  const dispatch = useDispatch()\n  let location = useLocation();\n  const navigate = useHistory();\n  const userID = location.pathname.split(\"/\")[2]\n  const user = useSelector((state) => state.user.editUser)\n  // console.log(user);\n\n  const [userEdit, setEditUser] = useState('')\n  const [isWorking, setIsWorking] = useState(false)\n\n  const isFetch = useSelector((state) => state.user.isFetching)\n  console.log(user);\n\n\n  const handleFields = (e)  => {        \n      // console.log(e.name);\n      const placeholder = e.name\n      const val = e.value\n      setEditUser({\n          ...userEdit,\n          [placeholder]: val\n      })       \n     }\n\n     const handleupdateUser = async (e) => {\n      e.preventDefault()\n      console.log(\"trying to update\");\n      if(!isFetch) {\n        try{\n          console.log(user);\n          console.log(userEdit)\n            updateUser(user._id, userEdit, dispatch)\n          }catch(err){\n            console.log(err);\n          }\n      \n      }    \n        \n    \n        navigate.push(\"/users\")\n      \n\n      \n     }\n\n\n  useEffect(() => {\n    getUserById(userID, userID, dispatch)\n    setEditUser(userEdit)\n  }, [userEdit])\n\n\n\n\n\n\n  return (\n    <div className=\"user\">\n      <div className=\"userTitleContainer\">\n        <h1 className=\"userTitle\">Edit User</h1>\n        <Link to=\"/newUser\">\n          <button className=\"userAddButton\">Create</button>\n        </Link>\n      </div>\n      <div className=\"userContainer\">\n        <div className=\"userShow\">\n          <div className=\"userShowTop\">\n            <img\n              src=\"https://images.pexels.com/photos/1152994/pexels-photo-1152994.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\n              alt=\"\"\n              className=\"userShowImg\"\n            />\n            <div className=\"userShowTopTitle\">\n              <span className=\"userShowUsername\">{user.username}</span>\n              <span className=\"userShowUserTitle\">\n                {user.isAdmin ? \"Adminatrator\" : \"Customer\"}\n              </span>\n            </div>\n          </div>\n          <div className=\"userShowBottom\">\n            <span className=\"userShowTitle\">Account Details</span>\n            <div className=\"userShowInfo\">\n              <PermIdentity className=\"userShowIcon\" />\n              <span className=\"userShowInfoTitle\">annabeck99</span>\n            </div>\n            <div className=\"userShowInfo\">\n              <CalendarToday className=\"userShowIcon\" />\n              <span className=\"userShowInfoTitle\">10.12.1999</span>\n            </div>\n            <span className=\"userShowTitle\">Contact Details</span>\n            <div className=\"userShowInfo\">\n              <PhoneAndroid className=\"userShowIcon\" />\n              <span className=\"userShowInfoTitle\">+1 123 456 67</span>\n            </div>\n            <div className=\"userShowInfo\">\n              <MailOutline className=\"userShowIcon\" />\n              <span className=\"userShowInfoTitle\">{user.email}</span>\n            </div>\n            <div className=\"userShowInfo\">\n              <LocationSearching className=\"userShowIcon\" />\n              <span className=\"userShowInfoTitle\">New York | USA</span>\n            </div>\n          </div>\n        </div>\n        <div className=\"userUpdate\">\n          <span className=\"userUpdateTitle\">Edit</span>\n\n          <form className=\"userUpdateForm\">\n            <div className=\"userUpdateLeft\">\n              <div className=\"userUpdateItem\">\n                <label>Username</label>\n                <input\n                name= \"username\" \n                onChange={(e) => handleFields(e.target)}\n                  type=\"text\"\n                  placeholder={user.username}\n                  className=\"userUpdateInput\"\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>First Name</label>\n                <input\n                name= \"firstname\" \n                 onChange={(e) => handleFields(e.target)}\n                  type=\"text\"\n                  placeholder={user.firstname}\n                  className=\"userUpdateInput\"\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>Last Name</label>\n                <input\n                name= \"lastname\" \n                 onChange={(e) => handleFields(e.target)}\n                  type=\"text\"\n                  placeholder={user.lastname}\n                  className=\"userUpdateInput\"\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>Email</label>\n                <input\n                name= \"email\" \n                onChange={(e) => handleFields(e.target)}\n                  type=\"text\"\n                  placeholder={user.email}\n                  className=\"userUpdateInput\"\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>City</label>\n                <input\n                name= \"city\" \n                onChange={(e) => handleFields(e.target)}\n                  type=\"text\"\n                  placeholder={user.city}\n                  className=\"userUpdateInput\"\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>State</label>\n                <input\n                name= \"state\" \n                onChange={(e) => handleFields(e.target)}\n                  type=\"text\"\n                  placeholder={user.state}\n                  className=\"userUpdateInput\"\n                />\n              </div>\n              <div className=\"userUpdateItem\">\n                <label>Zipcode</label>\n                <input\n                name= \"zipcode\" \n                onChange={(e) => handleFields(e.target)}\n                  type=\"text\"\n                  placeholder={user.zipcode}\n                  className=\"userUpdateInput\"\n                />\n              </div>\n            </div>\n            <div className=\"userUpdateRight\">\n              <div className=\"userUpdateUpload\">\n                <img\n                  className=\"userUpdateImg\"\n                  src={user.img}\n                  alt=\"\"\n                />\n                <label htmlFor=\"file\">\n                  <Publish className=\"userUpdateIcon\" />\n                </label>\n                <input type=\"file\" id=\"file\" style={{ display: \"none\" }} />\n              </div>\n              <button className=\"userUpdateButton\" onClick={handleupdateUser}>Update</button>\n            </div>\n          </form>\n        </div>\n        <div>\n        </div>\n      </div>\n\n      <div className=\"userOrder\">\n        <label>Username</label>\n        <input\n          type=\"text\"\n          placeholder={user.username}\n          className=\"userUpdateInput\"\n        />\n      </div>\n    </div>\n\n\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/newProduct/NewProduct.jsx",["191","192","193","194","195","196"],"import { useEffect, useState } from \"react\";\nimport \"./newProduct.css\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from \"../../firebase\"\nimport { useDispatch } from \"react-redux\";\nimport {addProducts} from '../../redux/apiCalls'\n\n\n\nexport default function NewProduct() {\n  const [inputs, setInputs] = useState({})\n  const [file, setFile] = useState(null)\n  const [previewFile, setPreviewFile] = useState(null)\n  const [cat, setCat] = useState([])\n  const [subCat, setSubCat] = useState([])\n  const [gender, setGender] = useState([])\n  const [color, setColor] = useState([] )\n  const [size, setSize] = useState([])\n  const [salePrice, setSalePrice] = useState(0)\n\n  const [wholeSalePrice1, setWholeSalePrice1] = useState(0)\n  const [wholeSaleQuantity1, setWholeSaleQuantity1] = useState(0)\n  const [wholeSalePrice2, setWholeSalePrice2] = useState(0)\n  const [wholeSaleQuantity2, setWholeSaleQuantity2] = useState(0)\n  const [wholeSalePrice3, setWholeSalePrice3] = useState(0)\n  const [wholeSaleQuantity3, setWholeSaleQuantity3] = useState(0)\n\n  const [wholeSaleToggle, setWholeSaleToggle] = useState(false)\n  const [saleToggle, setSaleToggle] = useState(false)\n\n\n\n  const dispatch = useDispatch()\n\n  const handleChange =(e) => {\n    setInputs(prev=>{\n      return {...prev, [e.target.name]: e.target.value}\n    })\n  }\n\n\n  const handleGender = (e) => {        \n    if(!gender.includes(e.target.value)){\n      setGender(gender =>  [...gender, e.target.value])\n    }else if(gender.includes(e.target.value)){\n      gender.map((c, index) => {\n        console.log('here');\n        if(c === e.target.value && !e.target.checked){\n          console.log('found');\n          gender.splice(index, 1)          \n          setGender(gender)     \n       }\n      })\n    }\n    console.log(gender);\n  }\n\n  const handleSubCat = (e) => {        \n    if(!subCat.includes(e.target.value)){\n      setSubCat(subCat =>  [...subCat, e.target.value])\n    }else if(subCat.includes(e.target.value)){\n      subCat.map((c, index) => {\n        console.log('here');\n        if(c === e.target.value && !e.target.checked){\n          console.log('found');\n          subCat.splice(index, 1)          \n          setSubCat(subCat)     \n       }\n      })\n    }\n    console.log(subCat);\n  }\n  const handleCat = (e) => {        \n    if(!cat.includes(e.target.value)){\n      setCat(cat =>  [...cat, e.target.value])\n    }else if(cat.includes(e.target.value)){\n      cat.map((c, index) => {\n        console.log('here');\n        if(c === e.target.value && !e.target.checked){\n          console.log('found');\n          cat.splice(index, 1)          \n          setCat(cat)     \n       }\n      })\n    }\n    console.log(cat);\n  }\n\n  const handleColor = (e) => {\n    if(!color.includes(e.target.value)){\n      setColor(color =>  [...color, e.target.value])\n    }else if(color.includes(e.target.value)){\n      color.map((c, index) => {\n        console.log('here');\n        if(c === e.target.value && !e.target.checked){\n          console.log('found');\n          color.splice(index, 1)          \n          setColor(color)     \n       }\n      })\n    }\n    console.log(color);\n  }\n\n  const handleSize = (e) => {\n    if(!size.includes(e.target.value)){\n      setSize(size =>  [...size, e.target.value])\n    }else if(size.includes(e.target.value)){\n      size.map((c, index) => {\n        console.log('here');\n        if(c === e.target.value && !e.target.checked){\n          console.log('found');\n          size.splice(index, 1)          \n          setSize(size)     \n       }\n      })\n    }\n    // console.log(size);\n  }\n\n  const handleWholeSaleDiv=(e) => {\n    if(e.target.value){\n      setWholeSaleToggle(!wholeSaleToggle)\n      setInputs(prev=>{\n        return {...prev, [e.target.name]: e.target.value}\n      })            \n    }else{\n      setWholeSaleToggle(!wholeSaleToggle)\n      setInputs(prev=>{\n        return {...prev, [e.target.name]: e.target.value}\n      })            \n    }          \n  }\n  const handleOnSale=(e) => {\n    if(e.target.value){\n      setSaleToggle(!saleToggle)\n      setInputs(prev=>{\n        return {...prev, [e.target.name]: e.target.value}\n      })            \n    }else{\n      setSaleToggle(!saleToggle)\n      setInputs(prev=>{\n        return {...prev, [e.target.name]: e.target.value}\n      })            \n    }          \n  }\n\n  const handleWholeSaleQuantity1 = (e) => {\n    try {\n      setWholeSaleQuantity1( e.target.value)\n    } catch (error) {\n      console.log(error);\n    }          \n    \n  }\n  const handleWholeSalePrice1 = (e) => {\n    try {\n      setWholeSalePrice1(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }          \n    \n  }\n\n  const handleWholeSaleQuantity2 = (e) => {\n    try {\n      setWholeSaleQuantity2( e.target.value)\n    } catch (error) {\n      console.log(error);\n    }          \n    \n  }\n  const handleWholeSalePrice2 = (e) => {\n    try {\n      setWholeSalePrice2(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }          \n    \n  }\n\n\n  const handleWholeSaleQuantity3 = (e) => {\n    try {\n      setWholeSaleQuantity3( e.target.value)\n    } catch (error) {\n      console.log(error);\n    }          \n    \n  }\n  const handleWholeSalePrice3 = (e) => {\n    try {\n      setWholeSalePrice3(e.target.value)\n    } catch (error) {\n      console.log(error);\n    }          \n    \n  }\n\n\n  const handlePhoto = (e) => {\n   setFile(e.target.files[0])\n   setPreviewFile(URL.createObjectURL(e.target.files[0]))\n  }\n  // const handleSize = (e) => {\n  //   setSize(e.target.value.split(','))\n  // }\n  console.log(file);\n  const handleClick = (e) => {\n    e.preventDefault()\n    const fileName = new Date().getTime() + file.name;\n    const storage = getStorage(app)\n    const StorageRef = ref(storage, fileName)\n \n  const uploadTask = uploadBytesResumable(StorageRef, file);\n\n// Register three observers:\n// 1. 'state_changed' observer, called any time the state changes\n// 2. Error observer, called on failure\n// 3. Completion observer, called on successful completion\nuploadTask.on('state_changed', \n  (snapshot) => {\n    // Observe state change events such as progress, pause, and resume\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log('Upload is ' + progress + '% done');\n    switch (snapshot.state) {\n      case 'paused':\n        console.log('Upload is paused');\n        break;\n      case 'running':\n        console.log('Upload is running');\n        break;\n        default:\n    }\n  }, \n  (error) => {\n    // Handle unsuccessful uploads\n  }, \n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n      // console.log('File available at', downloadURL);\n      const product = {...inputs, img: downloadURL, salePrice: salePrice, categories: cat, color, size, gender, subCategories: subCat, \n        wholeSaleTier1: {wholeSaleQuantity1: wholeSaleQuantity1, wholePrice1: wholeSalePrice1},\n        wholeSaleTier2: {wholeSaleQuantity2: wholeSaleQuantity2, wholePrice2: wholeSalePrice2},\n        wholeSaleTier3: {wholeSaleQuantity3: wholeSaleQuantity3, wholePrice3: wholeSalePrice3}};\n      console.log(product);\n      addProducts(product, dispatch)\n    });\n  }\n);\n}\n\nuseEffect(() => {\n  \n}, [cat]);\n\n  \n  return (\n    <div className=\"newProduct\">\n      <h1 className=\"addProductTitle\">New Product</h1>\n      <form className=\"addProductForm\">\n        <div className=\"productFormLeft\">\n          <div className=\"addProductItem\">\n            <label>Image</label>\n              <div className=\"productUpload\">\n                <img className=\"productPic\"  src={previewFile} />\n              </div>\n            <input type=\"file\" id=\"file\" onChange={handlePhoto}/>\n          </div>\n          <div className=\" wholeSalePair\">\n                  <div className=\"addProductItem\">\n                    <label>Title</label>\n                    <input name='title' type=\"text\"  onChange={handleChange} />\n                  </div>              \n                  <div className=\"addProductItem\">\n                    <label>Price</label>\n                    <input name='price' type=\"number\"  onChange={handleChange} />\n                  </div>\n                </div>\n                <div className=\" wholeSalePair\">\n                  <div className=\"addProductItem\">\n                    <label>On Sale?</label>\n                    <select name='onSale'defaultValue={false} onChange={handleOnSale} >\n                      <option value='true'>Yes</option>\n                      <option value='false'>No</option>\n                    </select>\n                  </div>   \n\n                  <div className=\"addProductItem\" >\n                    <label >Sale Price</label>\n                    <input style={{width: saleToggle ? '40%': '0%'}} disabled={!saleToggle} name='salePrice' defaultValue={0}  type=\"number\"  onChange={(e)=> setSalePrice(e.target.value)} />\n                  </div>\n                </div>\n                <div className=\" wholeSalePair\">\n                  <div className=\"addProductItem\">\n                    <label>Can be printed on?</label>\n                    <select name='isPrintItem'defaultValue={false} onChange={handleChange} >\n                      <option value='true'>Yes</option>\n                      <option value='false'>No</option>\n                    </select>\n                  </div>  \n                </div>  \n                <div className=\" wholeSaleDiv\" style={{height: wholeSaleToggle ? '226px': '50px'}}>\n                  <div className=\"wholeSaleItem\">\n                    <label>Is this a WholeSale Item?</label>\n                    <select name='isWholeSaleItem' defaultValue={false} onChange={handleWholeSaleDiv} >\n                      <option value='true'>Yes</option>\n                      <option value='false'>No</option>\n                    </select>\n                  </div>                   \n                  <div className=\" wholeSalePair\">\n                    <div className=\"wholeSaleItem leftInput\">\n                      <label>WholeSale Tier 1 Quantity</label>\n                      <input name='wholeSaleQuantity' type=\"number\" placeholder=\"3\" onChange={handleWholeSaleQuantity1} />\n                    </div>\n                    <div className='wholesaleText'>for $</div>\n                    <div className=\"wholeSaleItem \">\n                      <label>WholeSale Tier 1 Price</label>\n                      <input name='wholeSalePrice' type=\"number\" placeholder=\"8.99\" onChange={handleWholeSalePrice1} />\n                    </div>\n                    <div className='wholesaleText'>each</div>\n                  </div>\n                  <div className=\" wholeSalePair\">\n                    <div className=\"wholeSaleItem leftInput \">\n                      <label>WholeSale Tier 2 Quantity</label>\n                      <input name='wholeSaleQuantity' type=\"number\" placeholder=\"6\" onChange={handleWholeSaleQuantity2} />\n                      </div>\n                      <div className='wholesaleText'>for $</div>\n                      <div className=\"wholeSaleItem \">\n                      <label>WholeSale Tier 2 Price</label>\n                      <input name='wholeSalePrice' type=\"number\" placeholder=\"6.99\" onChange={handleWholeSalePrice2} />\n                    </div>\n                    <div className='wholesaleText'>each</div>\n                  </div>\n                  <div className=\" wholeSalePair\">\n                    <div className=\"wholeSaleItem leftInput\">\n                      <label>WholeSale Tier 3 Quantity</label>\n                      <input name='wholeSaleQuantity' type=\"number\" placeholder=\"9\" onChange={handleWholeSaleQuantity3} />\n                    </div>\n                    <div className='wholesaleText'>for $</div>\n                    <div className=\"wholeSaleItem\">\n                      <label>WholeSale Tier 3 Price</label>\n                      <input name='wholeSalePrice' type=\"number\" placeholder=\"4.99\" onChange={handleWholeSalePrice3} />\n                    </div>\n                    <div className='wholesaleText'>each</div>\n                  </div>\n                </div>       \n          <div className=\"catDivs\">\n            <label>Description</label>\n            <textarea name='desc' className= 'txtArea' rows=\"4\" cols=\"50\"  onChange={handleChange}></textarea>\n          </div>       \n          <div className=\" wholeSalePair\">\n            <div className=\"catDivs\">\n              <label>Gender</label>         \n                <ul className=\"checkbox-grids\" name='gender' onChange={handleGender}>\n                  <li><input type=\"checkbox\" name='gender' value=\"boys\" /><label htmlFor=\"text1\">Boys</label></li>\n                  <li><input type=\"checkbox\" name='gender' value=\"girls\" /><label htmlFor=\"text1\">Girls</label></li>\n                  <li><input type=\"checkbox\" name='gender' value=\"women\" /><label htmlFor=\"text2\">Women</label></li>\n                  <li><input type=\"checkbox\" name='gender' value=\"men\" /><label htmlFor=\"text3\">Men</label></li>             \n                  <li><input type=\"checkbox\" name='gender' value=\"unisex\" /><label htmlFor=\"text3\">Unisex</label></li>             \n              </ul>          \n            </div>        \n            <div className=\"catDivs\">\n              <label>Category</label>         \n                <ul className=\"checkbox-grids\" name='categories' onChange={handleCat}>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"tops\" /><label htmlFor=\"text1\">Top</label></li>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"bottoms\" /><label htmlFor=\"text2\">Bottom</label></li>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"sets\" /><label htmlFor=\"text3\">Sets</label></li>              \n                  <li><input type=\"checkbox\" name=\"categories\" value=\"jewlery\" /><label htmlFor=\"text6\">Jewlery</label></li>              \n                  <li><input type=\"checkbox\" name=\"categories\" value=\"sale\" /><label htmlFor=\"text7\">Sale</label></li>\n                  <li><input type=\"checkbox\" name=\"categories\" value=\"other\" /><label htmlFor=\"text8\">Other</label></li>\n              </ul>          \n            </div>        \n          </div>        \n          <div className=\"catDivs\">\n            <label>Sub-Category</label>         \n              <ul className=\"checkbox-grids\" name='subCategories' onChange={handleSubCat}>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"graphic tshirts\" /><label htmlFor=\"text7\">Graphic TShirt</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"short sleeve shirts\" /><label htmlFor=\"text1\">Short Sleeve Shirt</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"long sleeve shirts\" /><label htmlFor=\"text2\">Long Sleeve Shirt</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"sweaters\" /><label htmlFor=\"text3\">Sweater</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"hoodies\" /><label htmlFor=\"text4\">Hoodies</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"shorts\" /><label htmlFor=\"text5\">Shorts</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"pants\" /><label htmlFor=\"text6\">Pants</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"jeans\" /><label htmlFor=\"text7\">Jeans</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"sweats\" /><label htmlFor=\"text7\">Sweat Pants</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"leggings\" /><label htmlFor=\"text7\">Leggings</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"rompers\" /><label htmlFor=\"text8\">Rompers</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"pajamas\" /><label htmlFor=\"text6\">Pajamas</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"sweatsuits\" /><label htmlFor=\"text7\">Sweatsuits</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"necklaces\" /><label htmlFor=\"text8\">Necklace</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"bracelets\" /><label htmlFor=\"text6\">Braclete</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"rings\" /><label htmlFor=\"text7\">Ring</label></li>\n                <li><input type=\"checkbox\" name=\"subCategories\" value=\"other\" /><label htmlFor=\"text8\">Other</label></li>\n            </ul>          \n          </div>        \n          <div className=\" wholeSalePair\">\n            <div className=\"catDivs\">\n              <label>Color</label>         \n                <ul className=\"checkbox-grids\" name='color' onChange={handleColor}>\n                  <li><input type=\"checkbox\" name=\"color\" value=\"black\" /><label htmlFor=\"text1\">Black</label></li>\n                  <li><input type=\"checkbox\" name=\"color\" value=\"white\" /><label htmlFor=\"text2\">White</label></li>\n                  <li><input type=\"checkbox\" name=\"color\" value=\"red\" /><label htmlFor=\"text3\">Red</label></li>\n                  <li><input type=\"checkbox\" name=\"color\" value=\"blue\" /><label htmlFor=\"text4\">Blue</label></li>\n                  <li><input type=\"checkbox\" name=\"color\" value=\"yellow\" /><label htmlFor=\"text5\">Yellow</label></li>\n                  <li><input type=\"checkbox\" name=\"color\" value=\"green\" /><label htmlFor=\"text6\">Green</label></li>\n                  <li><input type=\"checkbox\" name=\"color\" value=\"pink\" /><label htmlFor=\"text7\">Pink</label></li>\n                  <li><input type=\"checkbox\" name=\"color\" value=\"other\" /><label htmlFor=\"text8\">Other</label></li>\n              </ul>          \n            </div>       \n            <div className=\"catDivs\">\n              <label>Size</label>         \n                <ul className=\"checkbox-grids\" name='size' onChange={handleSize}>\n                  <li><input type=\"checkbox\" name=\"size\" value=\"XS\" /><label htmlFor=\"text1\">XS</label></li>\n                  <li><input type=\"checkbox\" name=\"size\" value=\"S\" /><label htmlFor=\"text2\">S</label></li>\n                  <li><input type=\"checkbox\" name=\"size\" value=\"M\" /><label htmlFor=\"text3\">M</label></li>\n                  <li><input type=\"checkbox\" name=\"size\" value=\"L\" /><label htmlFor=\"text4\">L</label></li>\n                  <li><input type=\"checkbox\" name=\"size\" value=\"XL\" /><label htmlFor=\"text5\">XL</label></li>\n                  <li><input type=\"checkbox\" name=\"size\" value=\"XXL\" /><label htmlFor=\"text6\">XXL</label></li>\n                  <li><input type=\"checkbox\" name=\"size\" value=\"XXXL\" /><label htmlFor=\"text7\">XXXL</label></li>\n                  <li><input type=\"checkbox\" name=\"size\" value=\"other\" /><label htmlFor=\"text8\">Other</label></li>\n              </ul>          \n            </div>\n          </div>\n          <div className=\" wholeSalePair\">\n            <div className=\"addProductItem\">\n              <label>Stock</label>\n              <select name='inStock' onChange={handleChange} >\n                <option value='true'>Yes</option>\n                <option value='false'>No</option>\n              </select>\n            </div>\n            <div className=\"addProductItem\">\n              <label>Inventory Count</label>\n              <input name='inventory' type=\"number\" defaultValue={1} onChange={handleChange} />\n            </div> \n          </div>       \n          <button onClick={handleClick} className=\"addProductButton\">Create</button>\n          </div>  \n      </form>\n    </div>\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/productList/ProductList.jsx",["197"],"import \"./productList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { deleteProducts, getProducts } from \"../../redux/apiCalls\";\n\nexport default function ProductList() {\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const products = useSelector((state) => state.product.products)\n\n  useEffect(() => {\n\n    getProducts(dispatch)\n\n  }, [dispatch])\n\n\n  const handleDelete = (id) => {\n    deleteProducts(id, dispatch)\n  };\n\n\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 220 },\n    {\n      field: \"product\",\n      headerName: \"Product\",\n      width: 200,\n      renderCell: (params) => {\n        // console.log(params.row);\n        return (\n          <div className=\"productListItem\" min-width='100%'>\n            <img className=\"productListImg\" src={params.row.img} alt=\"\" />\n            {params.row.title}\n          </div>\n\n        );\n      },\n    },\n    { field: \"inStock\", headerName: \"Stock\", width: 150 },\n    { field: \"inventory\", headerName: \"Inventory\", width: 150 },\n    {\n      field: \"price\",\n      headerName: \"Price\",\n      width: 160,\n    },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <button className=\"productListEdit\">Edit</button>\n            <DeleteOutline\n              className=\"productListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"productList\">\n      <DataGrid\n        rows={products}\n        disableSelectionOnClick\n        columns={columns}\n        getRowId={row => row._id}\n        pageSize={8}\n        checkboxSelection\n        onRowClick={(params, event) => {\n          history.push('/product/' + params.id)\n        }\n        }\n      />\n    </div>\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/dummyData.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/featuredInfo/FeaturedInfo.jsx",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/chart/Chart.jsx",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/widgetSm/WidgetSm.jsx",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/components/widgetLg/WidgetLg.jsx",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/store.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/userRedux.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/login/Login.jsx",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/apiCalls.js",["198","199","200","201","202","203"],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/RequestMethods.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/productRedux.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/firebase.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/designRedux.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/newDesign/NewDesign.jsx",["204","205","206","207"],"import { useEffect, useState } from \"react\";\nimport \"./newDesign.css\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from \"../../firebase\"\nimport { useDispatch } from \"react-redux\";\nimport {addDesigns} from '../../redux/apiCalls'\n\n\n\nexport default function NewDesign() {\n  const [inputs, setInputs] = useState({})\n  const [file, setFile] = useState(null)\n  const [cat, setCat] = useState([])\n  const [color, setColor] = useState([] )\n  const [size, setSize] = useState([])\n  const dispatch = useDispatch()\n\n  const handleChange =(e) => {\n    setInputs(prev=>{\n      return {...prev, [e.target.name]: e.target.value}\n    })\n  }\n\n\n  const handleCat = (e) => {        \n    if(!cat.includes(e.target.value)){\n      setCat(cat =>  [...cat, e.target.value])\n    }else if(cat.includes(e.target.value)){\n      cat.map((c, index) => {\n        console.log('here');\n        if(c === e.target.value && !e.target.checked){\n          console.log('found');\n          cat.splice(index, 1)          \n          setCat(cat)     \n       }\n      })\n    }\n    console.log(cat);\n  }\n\n  const handleColor = (e) => {\n    if(!color.includes(e.target.value)){\n      setColor(color =>  [...color, e.target.value])\n    }else if(color.includes(e.target.value)){\n      color.map((c, index) => {\n        console.log('here');\n        if(c === e.target.value && !e.target.checked){\n          console.log('found');\n          color.splice(index, 1)          \n          setColor(color)     \n       }\n      })\n    }\n    console.log(color);\n  }\n\n  const handleSize = (e) => {\n    if(!size.includes(e.target.value)){\n      setSize(size =>  [...size, e.target.value])\n    }else if(size.includes(e.target.value)){\n      size.map((c, index) => {\n        console.log('here');\n        if(c === e.target.value && !e.target.checked){\n          console.log('found');\n          size.splice(index, 1)          \n          setSize(size)     \n       }\n      })\n    }\n    console.log(size);\n  }\n  // const handleColor = (e) => {\n  //   setColor(e.target.value.split(','))\n  // }\n  // const handleSize = (e) => {\n  //   setSize(e.target.value.split(','))\n  // }\n  \n  const handleClick = (e) => {\n    e.preventDefault()\n    const fileName = new Date().getTime() + file.name;\n    const storage = getStorage(app)\n    const StorageRef = ref(storage, fileName)\n \n  const uploadTask = uploadBytesResumable(StorageRef, file);\n\n// Register three observers:\n// 1. 'state_changed' observer, called any time the state changes\n// 2. Error observer, called on failure\n// 3. Completion observer, called on successful completion\nuploadTask.on('state_changed', \n  (snapshot) => {\n    // Observe state change events such as progress, pause, and resume\n    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n    const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    console.log('Upload is ' + progress + '% done');\n    switch (snapshot.state) {\n      case 'paused':\n        console.log('Upload is paused');\n        break;\n      case 'running':\n        console.log('Upload is running');\n        break;\n        default:\n    }\n  }, \n  (error) => {\n    // Handle unsuccessful uploads\n  }, \n  () => {\n    // Handle successful uploads on complete\n    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n    getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n      // console.log('File available at', downloadURL);\n      const design = {...inputs, img: downloadURL, categories: cat, color, size };\n      console.log(design);\n      addDesigns(design, dispatch)\n    });\n  }\n);\n}\n\nuseEffect(() => {\n  \n}, [cat]);\n\n  \n  return (\n    <div className=\"newProduct\">\n      <h1 className=\"addProductTitle\">New Design</h1>\n      <form className=\"addProductForm\">\n        <div className=\"addProductItem\">\n          <label>Image</label>\n          <input type=\"file\" id=\"file\" onChange={e=>setFile(e.target.files[0])}/>\n        </div>\n        <div className=\"addProductItem\">\n          <label>Stock Number</label>\n          <input name='stockNumber' type=\"text\" placeholder=\"# 123\" onChange={handleChange} />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Title</label>\n          <input name='title' type=\"text\" placeholder=\"Apple Airpods\" onChange={handleChange} />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Price</label>\n          <input name='price' type=\"number\" placeholder=\"Price\" onChange={handleChange} />\n        </div>\n        <div className=\"addProductItem\">\n          <label>Description</label>\n          <input name='desc' type=\"text\" placeholder=\"Description\" onChange={handleChange} />\n        </div>       \n        <div className=\"addProductItem\">\n          <label>Category</label>         \n            <ul className=\"checkbox-grid\" name='categories' onChange={handleCat}>\n              <li><input type=\"checkbox\" name=\"categories\" value=\"anime\" /><label htmlFor=\"text1\">Anime</label></li>\n              <li><input type=\"checkbox\" name=\"categories\" value=\"cartoon\" /><label htmlFor=\"text2\">Cartoon</label></li>\n              <li><input type=\"checkbox\" name=\"categories\" value=\"sports\" /><label htmlFor=\"text3\">Sports</label></li>\n              <li><input type=\"checkbox\" name=\"categories\" value=\"television\" /><label htmlFor=\"text4\">TV</label></li>\n              <li><input type=\"checkbox\" name=\"categories\" value=\"text\" /><label htmlFor=\"text5\">Text</label></li>\n              <li><input type=\"checkbox\" name=\"categories\" value=\"420\" /><label htmlFor=\"text6\">420</label></li>\n              <li><input type=\"checkbox\" name=\"categories\" value=\"music\" /><label htmlFor=\"text7\">Music</label></li>\n              <li><input type=\"checkbox\" name=\"categories\" value=\"other\" /><label htmlFor=\"text8\">Other</label></li>\n          </ul>          \n        </div>        \n        <div className=\"addProductItem\">\n          <label>Color</label>         \n            <ul className=\"checkbox-grid\" name='color' onChange={handleColor}>\n              <li><input type=\"checkbox\" name=\"color\" value=\"black\" /><label htmlFor=\"text1\">Black</label></li>\n              <li><input type=\"checkbox\" name=\"color\" value=\"white\" /><label htmlFor=\"text2\">White</label></li>\n              <li><input type=\"checkbox\" name=\"color\" value=\"red\" /><label htmlFor=\"text3\">Red</label></li>\n              <li><input type=\"checkbox\" name=\"color\" value=\"blue\" /><label htmlFor=\"text4\">Blue</label></li>\n              <li><input type=\"checkbox\" name=\"color\" value=\"yellow\" /><label htmlFor=\"text5\">Yellow</label></li>\n              <li><input type=\"checkbox\" name=\"color\" value=\"green\" /><label htmlFor=\"text6\">Green</label></li>\n              <li><input type=\"checkbox\" name=\"color\" value=\"pink\" /><label htmlFor=\"text7\">Pink</label></li>\n              <li><input type=\"checkbox\" name=\"color\" value=\"other\" /><label htmlFor=\"text8\">Other</label></li>\n          </ul>          \n        </div>       \n        \n        <div className=\"addProductItem\">\n          <label>Stock</label>\n          <select name='inStock' onChange={handleChange} >\n            <option value='true'>Yes</option>\n            <option value='false'>No</option>\n          </select>\n        </div>\n       \n        <button onClick={handleClick} className=\"addProductButton\">Create</button>\n      </form>\n    </div>\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/designList/DesignList.jsx",["208"],"import \"./designList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { useDispatch, useSelector} from \"react-redux\";\nimport { useEffect} from \"react\";\nimport { deleteDesigns, getDesigns } from \"../../redux/apiCalls\";\n\nexport default function DesignList() {\n \n  const dispatch = useDispatch()\n  const designs = useSelector((state) => state.design.designs)\n  const products = useSelector((state) => state.product.products)\n\n  useEffect(() => {\n\n    getDesigns(dispatch)\n    \n  }, [dispatch])\n  \n\n  const handleDelete = (id) => {\n    deleteDesigns(id, dispatch)\n  };\n\n// console.log(designs);\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 220 },\n    {\n      field: \"design\",\n      headerName: \"Design\",\n      width: 200,\n      renderCell: (params) => {\n        // console.log(params.row);\n        return (\n          <div className=\"productListItem\">\n            <img className=\"productListImg\" src={params.row.img} alt=\"\" />\n            {params.row.title}\n          </div>\n        );\n      },\n    },\n    { field: \"inStock\", headerName: \"Stock\", width: 200 },\n    {\n      field: \"price\",\n      headerName: \"Price\",\n      width: 160,\n    },\n    {\n      field: \"quantity\",\n      headerName: \"Quantity\",\n      width: 160,\n    },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={\"/design/\" + params.row._id}>\n              <button className=\"productListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"productListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"productList\">\n      <DataGrid\n        rows={designs}\n        disableSelectionOnClick\n        columns={columns}\n        getRowId ={row=>row._id}\n        pageSize={8}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/design/Design.jsx",["209","210","211","212","213"],"import { Link } from \"react-router-dom\";\nimport \"./design.css\";\nimport Chart from \"../../components/chart/Chart\"\nimport {productData} from \"../../dummyData\"\nimport { Publish } from \"@material-ui/icons\";\nimport { useLocation } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { userRequest } from \"../../RequestMethods\";\nimport { updateDesigns } from \"../../redux/apiCalls\";\n\nexport default function Design() {\n\n    const location = useLocation()\n    const designId = location.pathname.split('/')[2];\n\n    const design = useSelector((state) => \n        state.design.designs.find(design => design._id === designId) )\n    const [designStats, setDesignStats] = useState([])\n\n    const [inputs, setInputs] = useState(design)\n    const [file, setFile] = useState(design.img)\n    const [cat, setCat] = useState(design.categories)\n    const [color, setColor] = useState(design.color)\n    const [wholeSalePrice1, setWholeSalePrice1] = useState(design.wholeSalePrice1)\n    const [wholeSaleQuantity1, setWholeSaleQuantity1] = useState(design.wholeSaleQuantity1)\n    const [wholeSalePrice2, setWholeSalePrice2] = useState(design.wholeSalePrice2)\n    const [wholeSaleQuantity2, setWholeSaleQuantity2] = useState(design.wholeSaleQuantity2)\n    const [wholeSalePrice3, setWholeSalePrice3] = useState(design.wholeSalePrice3)\n    const [wholeSaleQuantity3, setWholeSaleQuantity3] = useState(design.wholeSaleQuantity3)\n\n    const [wholeSaleToggle, setWholeSaleToggle] = useState(design.isWholeSaleItem)\n    const [saleToggle, setSaleToggle] = useState(design.onSale)\n\n\n\n    const MONTHS = useMemo(\n        () => [\n          'Jan',\n          'Feb',\n          'Mar',\n          'Apr',\n          'May',\n          'Jun',\n          'Jul',\n          'Aug',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dec',\n        ],\n        [])\n\n\n        const dispatch = useDispatch()\n\n        const handleChange =(e) => {\n          setInputs(prev=>{\n                       return {...prev, [e.target.name]: e.target.value}\n          })\n        }\n\n        const handleColor = (e) => {\n          try {\n            if(!color.includes(e.target.value)){\n              return(\n              setColor(color =>  [...color, e.target.value]))\n            }else if(color.includes(e.target.value)){\n              return(\n              color?.map((c, index) => {\n                console.log('here');\n                if(c === e.target.value && !e.target.checked){\n                  console.log('found');\n                  console.log(color);\n                  color.splice(index, 1)          \n                  setColor(color)     \n               }\n              }))\n            }\n          } catch (error) {\n            console.log(error);\n          }\n          \n          console.log(color);\n        }\n        const handleCat = (e) => {     \n          try {\n            if(!cat.includes(e.target.value)){\n              return(\n              setCat(cat =>  [...cat, e.target.value]))\n            }else if(cat.includes(e.target.value)){\n              return(\n              cat?.map((c, index) => {\n                console.log('here');\n                if(c === e.target.value && !e.target.checked){\n                  console.log('found');\n                  cat.splice(index, 1)          \n                  setCat(cat)     \n               }\n              }))\n            }\n          } catch (error) {\n            console.log(error);\n          }             \n          console.log(cat);\n        }\n\n        const handleWholeSaleDiv=(e) => {\n          if(e.target.value){\n            setWholeSaleToggle(!wholeSaleToggle)\n            setInputs(prev=>{\n              return {...prev, [e.target.name]: e.target.value}\n            })            \n          }else{\n            setWholeSaleToggle(!wholeSaleToggle)\n            setInputs(prev=>{\n              return {...prev, [e.target.name]: e.target.value}\n            })            \n          }          \n        }\n        const handleOnSale=(e) => {\n          if(e.target.value){\n            setSaleToggle(!saleToggle)\n            setInputs(prev=>{\n              return {...prev, [e.target.name]: e.target.value}\n            })            \n          }else{\n            setSaleToggle(!saleToggle)\n            setInputs(prev=>{\n              return {...prev, [e.target.name]: e.target.value}\n            })            \n          }          \n        }\n      \n        const handleWholeSaleQuantity1 = (e) => {\n          try {\n            setWholeSaleQuantity1( e.target.value)\n          } catch (error) {\n            console.log(error);\n          }          \n          \n        }\n        const handleWholeSalePrice1 = (e) => {\n          try {\n            setWholeSalePrice1(e.target.value)\n          } catch (error) {\n            console.log(error);\n          }          \n          \n        }\n\n        const handleWholeSaleQuantity2 = (e) => {\n          try {\n            setWholeSaleQuantity2( e.target.value)\n          } catch (error) {\n            console.log(error);\n          }          \n          \n        }\n        const handleWholeSalePrice2 = (e) => {\n          try {\n            setWholeSalePrice2(e.target.value)\n          } catch (error) {\n            console.log(error);\n          }          \n          \n        }\n\n\n        const handleWholeSaleQuantity3 = (e) => {\n          try {\n            setWholeSaleQuantity3( e.target.value)\n          } catch (error) {\n            console.log(error);\n          }          \n          \n        }\n        const handleWholeSalePrice3 = (e) => {\n          try {\n            setWholeSalePrice3(e.target.value)\n          } catch (error) {\n            console.log(error);\n          }          \n          \n        }\n\n        const handleUpdate = async (e) => {\n          e.preventDefault()\n          console.log('inside update design');\n          console.log(inputs);\n          try {\n            const pro= {...inputs, img: file, categories: cat, \n              wholeSaleTier1: {wholeSaleQuantity1: wholeSaleQuantity1, wholePrice1: wholeSalePrice1},\n              wholeSaleTier2: {wholeSaleQuantity2: wholeSaleQuantity2, wholePrice2: wholeSalePrice2},\n              wholeSaleTier3: {wholeSaleQuantity3: wholeSaleQuantity3, wholePrice3: wholeSalePrice3}};\n            // console.log(pro.wholeSalePrice);\n           await updateDesigns(pro._id,pro, dispatch)\n          \n          } catch (error) {\n            console.log(error);\n          }          \n        }\n\n\n\n        useEffect(() => {\n            const getStats = async () => {\n              try {\n                const res = await userRequest.get('orders/income?pid=' + designId)\n                const list = res.data.sort((a,b) => {\n                    return a._id - b._id\n                })\n                list.map((item)=>\n                  setDesignStats((prev)=>[\n                    ...prev, \n                    {name:MONTHS[item._id - 1], Sales: item.total},\n                  ])\n                )\n              } catch (error) {}\n            }\n            getStats()\n          },[MONTHS])\n          \n         \n\n  return (\n    <div className=\"product\">\n      <div className=\"productTitleContainer\">\n        <h1 className=\"productTitle\">Product</h1>\n        <Link to=\"/newproduct\">\n          <button className=\"productAddButton\">Create</button>\n        </Link>\n      </div>\n      <div className=\"productTop\">\n          <div className=\"productTopLeft\">\n              <Chart data={designStats} dataKey=\"Sales\" title=\"Sales Performance\"/>\n          </div>\n          \n          <div className=\"productTopRight\">\n              <div className=\"productInfoTop\">\n                  <img src={design.img} alt=\"\" className=\"productInfoImg\" />\n                  <span className=\"productName\">{design.title}</span>\n              </div>\n              <div className=\"productInfoBottom\">\n                  <div className=\"productInfoItem\">\n                      <span className=\"productInfoKey\">{design._id}</span>\n                      <span className=\"productInfoValue\">123</span>\n                  </div>\n                  <div className=\"productInfoItem\">\n                      <span className=\"productInfoKey\">sales:</span>\n                      <span className=\"productInfoValue\">5123</span>\n                  </div>\n                  <div className=\"productInfoItem\">\n                      <span className=\"productInfoKey\">active:</span>\n                      <span className=\"productInfoValue\">yes</span>\n                  </div>\n                  <div className=\"productInfoItem\">\n                      <span className=\"productInfoKey\">in stock:</span>\n                      <span className=\"productInfoValue\">{design.inStock}</span>\n                  </div>\n              </div>\n          </div>\n      </div>\n\n\n      <div className=\"productBottom\">\n          <form className=\"productForm\">\n            <div className=\"productFormLeft\">\n              <div className=\" wholeSalePair\">\n                <div className=\"addProductItem\">\n                  <label>Image</label>\n                  <input type=\"file\" id=\"file\" onChange={e=>setFile(e.target.files[0])}/>\n                </div>\n                <div className=\"productUpload\">\n                      <img className=\"productPic\"  src={design.img} />\n                      <label htmlFor=\"file\">\n                          <Publish/>\n                      </label>\n                      <input type=\"file\" id=\"file\" style={{display:\"none\"}} />\n                  </div>\n                </div>\n              <div className=\" wholeSalePair\">\n                <div className=\"addProductItem\">\n                  <label>Title</label>\n                  <input name='title' type=\"text\" defaultValue={design.title} onChange={handleChange} />\n                </div>              \n                <div className=\"addProductItem\">\n                  <label>Price</label>\n                  <input name='price' type=\"number\" defaultValue={design.price} onChange={handleChange} />\n                </div>\n              </div>\n              <div className=\" wholeSalePair\">\n                <div className=\"addProductItem\">\n                  <label>On Sale?</label>\n                  <select name='onSale'defaultValue={design.onSale} onChange={handleOnSale} >\n                    <option value='true'>Yes</option>\n                    <option value='false'>No</option>\n                  </select>\n                </div>   \n\n                <div className=\"addProductItem\" >\n                  <label >Sale Price</label>\n                  <input style={{width: saleToggle ? '40%': '0%'}} disabled={!saleToggle} name='salePrice'  type=\"number\" defaultValue={design.salePrice} onChange={handleChange} />\n                </div>\n              </div>\n\n              <div className=\" wholeSaleDiv\" style={{height: wholeSaleToggle ? '226px': '50px'}}>\n                <div className=\"wholeSaleItem\">\n                  <label>Is this a WholeSale Item?</label>\n                  <select name='isWholeSaleItem' defaultValue={design.isWholeSaleItem} onChange={handleWholeSaleDiv} >\n                    <option value='true'>Yes</option>\n                    <option value='false'>No</option>\n                  </select>\n                </div>                   \n                <div className=\" wholeSalePair\">\n                  <div className=\"wholeSaleItem leftInput\">\n                    <label>WholeSale Tier 1 Quantity</label>\n                    <input name='wholeSaleQuantity' type=\"number\" placeholder=\"3\" onChange={handleWholeSaleQuantity1} />\n                  </div>\n                  <div className='wholesaleText'>for $</div>\n                  <div className=\"wholeSaleItem \">\n                    <label>WholeSale Tier 1 Price</label>\n                    <input name='wholeSalePrice' type=\"number\" placeholder=\"8.99\" onChange={handleWholeSalePrice1} />\n                  </div>\n                  <div className='wholesaleText'>each</div>\n                </div>\n                <div className=\" wholeSalePair\">\n                  <div className=\"wholeSaleItem leftInput \">\n                    <label>WholeSale Tier 2 Quantity</label>\n                    <input name='wholeSaleQuantity' type=\"number\" placeholder=\"6\" onChange={handleWholeSaleQuantity2} />\n                    </div>\n                    <div className='wholesaleText'>for $</div>\n                    <div className=\"wholeSaleItem \">\n                    <label>WholeSale Tier 2 Price</label>\n                    <input name='wholeSalePrice' type=\"number\" placeholder=\"6.99\" onChange={handleWholeSalePrice2} />\n                  </div>\n                  <div className='wholesaleText'>each</div>\n                </div>\n                <div className=\" wholeSalePair\">\n                  <div className=\"wholeSaleItem leftInput\">\n                    <label>WholeSale Tier 3 Quantity</label>\n                    <input name='wholeSaleQuantity' type=\"number\" placeholder=\"9\" onChange={handleWholeSaleQuantity3} />\n                  </div>\n                  <div className='wholesaleText'>for $</div>\n                  <div className=\"wholeSaleItem\">\n                    <label>WholeSale Tier 3 Price</label>\n                    <input name='wholeSalePrice' type=\"number\" placeholder=\"4.99\" onChange={handleWholeSalePrice3} />\n                  </div>\n                  <div className='wholesaleText'>each</div>\n                </div>\n              </div>              \n              <label>Description</label>\n              <textarea name='desc' className= 'txtArea' rows=\"4\" cols=\"50\" defaultValue={design.desc} onChange={handleChange}></textarea>\n                     \n                     \n              <div className=\"catDivs\">\n                <label>Color</label>         \n                  <ul className=\"checkbox-grids\" name='color' onChange={handleColor}>\n                    <li><input type=\"checkbox\" name=\"color\" value=\"black\" defaultChecked= {design.color.includes('black')}/><label htmlFor=\"text1\">Black</label></li>\n                    <li><input type=\"checkbox\" name=\"color\" value=\"white\" defaultChecked= {design.color.includes('white')} /><label htmlFor=\"text2\">White</label></li>\n                    <li><input type=\"checkbox\" name=\"color\" value=\"red\" defaultChecked= {design.color.includes('red')}/><label htmlFor=\"text3\">Red</label></li>\n                    <li><input type=\"checkbox\" name=\"color\" value=\"blue\" defaultChecked= {design.color.includes('blue')}/><label htmlFor=\"text4\">Blue</label></li>\n                    <li><input type=\"checkbox\" name=\"color\" value=\"yellow\" defaultChecked= {design.color.includes('yellow')}/><label htmlFor=\"text5\">Yellow</label></li>\n                    <li><input type=\"checkbox\" name=\"color\" value=\"green\" defaultChecked= {design.color.includes('green')}/><label htmlFor=\"text6\">Green</label></li>\n                    <li><input type=\"checkbox\" name=\"color\" value=\"pink\" defaultChecked= {design.color.includes('pink')}/><label htmlFor=\"text7\">Pink</label></li>\n                    <li><input type=\"checkbox\" name=\"color\" value=\"other\" defaultChecked= {design.color.includes('other')}/><label htmlFor=\"text8\">Other</label></li>\n                </ul>          \n              </div>      \n              <div className=\"catDivs\">\n                <label>Category</label>         \n                  <ul className=\"checkbox-grids\" name='categories' onChange={handleCat}>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"graphic tshirts\" defaultChecked= {design.categories?.includes('graphic tshirts')}/><label htmlFor=\"text7\">Graphic TShirt</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"weed\" defaultChecked= {design.categories?.includes('weed')}/><label htmlFor=\"text1\">Weed</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"420\" defaultChecked= {design.categories?.includes('420')}/><label htmlFor=\"text2\">420</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"anime\" defaultChecked= {design.categories?.includes('anime')}/><label htmlFor=\"text3\">Anime</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"cartoon\" defaultChecked= {design.categories?.includes('cartoon')}/><label htmlFor=\"text4\">Cartoon</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"sports\" defaultChecked= {design.categories?.includes('sports')}/><label htmlFor=\"text5\">Sports</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"music\" defaultChecked= {design.categories?.includes('music')}/><label htmlFor=\"text6\">Music</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"text\" defaultChecked= {design.categories?.includes('text')}/><label htmlFor=\"text7\">Text</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"messege\" defaultChecked= {design.categories?.includes('messege')}/><label htmlFor=\"text7\">Messege</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"rick and morty\" defaultChecked= {design.categories?.includes('rick and morty')}/><label htmlFor=\"text7\">Rick and Morty</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"love\" defaultChecked= {design.categories?.includes('love')}/><label htmlFor=\"text8\">Love</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"supreme\" defaultChecked= {design.categories?.includes('supreme')}/><label htmlFor=\"text6\">Supreme</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"princess\" defaultChecked= {design.categories?.includes('princess')}/><label htmlFor=\"text7\">Princess</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"flowers\" defaultChecked= {design.categories?.includes('flowers')}/><label htmlFor=\"text8\">Flowers</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"fun\" defaultChecked= {design.categories?.includes('fun')}/><label htmlFor=\"text6\">Fun</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"amoung us\" defaultChecked= {design.categories?.includes('amoung us')} /><label htmlFor=\"text7\">Among Us</label></li>\n                    <li><input type=\"checkbox\" name=\"categories\" value=\"other\" defaultChecked= {design.categories?.includes('other')}/><label htmlFor=\"text8\">Other</label></li>\n                </ul>          \n              </div>        \n             \n              <div className=\" wholeSalePair\">\n              <div className=\"addProductItem\">\n                <label>Stock</label>\n                <select name='inStock' onChange={handleChange} >\n                  <option value='true'>Yes</option>\n                  <option value='false'>No</option>\n                </select>\n              </div>    \n              <div className=\"addProductItem\">\n                  <label>Inventory Count</label>\n                  <input name='inventory' type=\"number\" defaultValue={design.inventory} onChange={handleChange} />\n              </div>\n              \n            </div>\n              <button className=\"productButton\" onClick={handleUpdate}>Update</button >             \n            </div>\n            \n            \n           \n          </form>\n          \n      </div>\n    </div>\n  );\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/toFirebase.js",["214","215","216","217"],"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from \"../firebase\"\nimport { addPhotos } from \"./productRedux\";\nimport { updateProducts } from \"./apiCalls\";\n\nexport default function AddPhotoToFireBase(files1, mainFile, product, isMainPhoto, isExtraPhotos, dispatch) {\n    console.log('inside Add to Firebae');\n\n    let pho = []\n    let mainPho = mainFile\n    let files = new Array(files1)\n\n    // console.log(isExtraPhotos);\n    // console.log(files1);\n    // console.log(isMainPhoto);\n    // console.log(mainFile);\n\n\n    product?.morePhotos.map((photo, idx) => {\n        if (files[0][idx] == null) {\n            pho[idx] = photo\n            files[0][idx] = photo\n        } else if (files[0][idx] != null) {\n            pho[idx] = files[0][idx]\n        }\n    })\n    files[0].push({ main: mainFile })\n\n    console.log(files);\n\n    let items = []\n    let itemsProcessed = 0\n    let haveFiles = false\n    let isSuccesful = false\n\n    files[0].forEach((fil, idx) => {\n        let file;    \n        // console.log(idx);\n        // console.log(fil.main);\n\n        if (idx >= files[0].length - 1) {\n            console.log(\"in switch case 1\");\n            file = fil.main\n        } else {\n            console.log(\"in case 2\");\n            file = fil\n        }\n        console.log(\"after change\");\n        console.log(file);\n        if (typeof file == \"object\") {\n            items.push(file)\n            haveFiles = true\n\n            const fileName = file?.name;\n            const storage = getStorage(app)\n            const StorageRef = ref(storage, `images/productImages/${product._id}/${fileName}`)\n            const uploadTask = uploadBytesResumable(StorageRef, file);\n            // Register three observers:\n            // 1. 'state_changed' observer, called any time the state changes\n            // 2. Error observer, called on failure\n            // 3. Completion observer, called on successful completion\n            uploadTask.on('state_changed', (snapshot) => {\n                // Observe state change events such as progress, pause, and resume\n                // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                console.log('Upload is ' + progress + '% done');\n                switch (snapshot.state) {\n                    case 'paused':\n                        console.log('Upload is paused');\n                        break;\n                    case 'running':\n                        console.log('Upload is running');\n                        break;\n                    default:\n                }\n                console.log('Upload is ' + progress + '% done');\n            },\n                (error) => {\n                    // Handle unsuccessful uploads\n                    console.log(error);\n                },\n                async () => {\n                    // Handle successful uploads on complete\n                    // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                    \n                        \n                        // pho.push(downloadURL)\n                        if (idx <= files[0].length - 2) {\n                            await getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                            console.log('in more file');\n                            console.log('File available at', downloadURL);\n                            pho[idx] = downloadURL\n                            isSuccesful = true\n                            itemsProcessed++\n                        });\n                        }\n                        if (idx >= files[0].length - 1) {\n                            await getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                            console.log(\"in main pho\");\n                            console.log('File available at', downloadURL);\n                            mainPho = downloadURL\n                            isSuccesful = true\n                            itemsProcessed++\n                        });\n                        }                        \n                    \n                    console.log(\"hre\");\n                        let pro = {};\n                        if (itemsProcessed >= items.length  && isSuccesful) {\n                            if (isExtraPhotos || isMainPhoto) {\n                                pro = { ...product, img: mainPho, morePhotos: pho }\n                            }\n                            await updateProducts(pro._id, pro, dispatch).then((res)=>{\n                                console.log(\"Success, we need to REFRSH\");\n                            })\n                            \n                           \n                        }\n                    \n                });\n        }\n\n    })\n\n    if (!haveFiles) {\n        updateProducts(product._id, product, dispatch).then((res)=> {\n            console.log(\"We dont have files and need to REFRSH\");  \n        })\n              \n    }\n    console.log(pho);\n\n}\n","/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/productCategories/ProductCatList.jsx",["218","219"],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/newProductCategory/NewProductCatergory.jsx",["220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272","273","274","275"],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/productCategoryRedux.js",["276","277"],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/photoGalleryRedux.js",[],"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/photoGallery/PhotoGallery.jsx",["278","279","280","281","282","283","284","285","286","287","288"],{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":7,"column":11,"nodeType":"295","messageId":"296","endLine":7,"endColumn":22},{"ruleId":"293","severity":1,"message":"297","line":2,"column":10,"nodeType":"295","messageId":"296","endLine":2,"endColumn":19},{"ruleId":"293","severity":1,"message":"298","line":2,"column":21,"nodeType":"295","messageId":"296","endLine":2,"endColumn":29},{"ruleId":"293","severity":1,"message":"299","line":3,"column":10,"nodeType":"295","messageId":"296","endLine":3,"endColumn":20},{"ruleId":"293","severity":1,"message":"300","line":3,"column":22,"nodeType":"295","messageId":"296","endLine":3,"endColumn":25},{"ruleId":"293","severity":1,"message":"301","line":3,"column":27,"nodeType":"295","messageId":"296","endLine":3,"endColumn":47},{"ruleId":"293","severity":1,"message":"302","line":3,"column":49,"nodeType":"295","messageId":"296","endLine":3,"endColumn":63},{"ruleId":"293","severity":1,"message":"303","line":4,"column":8,"nodeType":"295","messageId":"296","endLine":4,"endColumn":11},{"ruleId":"293","severity":1,"message":"304","line":5,"column":10,"nodeType":"295","messageId":"296","endLine":5,"endColumn":21},{"ruleId":"293","severity":1,"message":"305","line":6,"column":9,"nodeType":"295","messageId":"296","endLine":6,"endColumn":16},{"ruleId":"293","severity":1,"message":"306","line":4,"column":10,"nodeType":"295","messageId":"296","endLine":4,"endColumn":21},{"ruleId":"293","severity":1,"message":"307","line":8,"column":21,"nodeType":"295","messageId":"296","endLine":8,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":9,"column":10,"nodeType":"295","messageId":"296","endLine":9,"endColumn":21},{"ruleId":"293","severity":1,"message":"308","line":10,"column":29,"nodeType":"295","messageId":"296","endLine":10,"endColumn":40},{"ruleId":"293","severity":1,"message":"300","line":11,"column":22,"nodeType":"295","messageId":"296","endLine":11,"endColumn":25},{"ruleId":"293","severity":1,"message":"301","line":11,"column":27,"nodeType":"295","messageId":"296","endLine":11,"endColumn":47},{"ruleId":"293","severity":1,"message":"302","line":11,"column":49,"nodeType":"295","messageId":"296","endLine":11,"endColumn":63},{"ruleId":"293","severity":1,"message":"309","line":11,"column":65,"nodeType":"295","messageId":"296","endLine":11,"endColumn":77},{"ruleId":"293","severity":1,"message":"303","line":12,"column":8,"nodeType":"295","messageId":"296","endLine":12,"endColumn":11},{"ruleId":"293","severity":1,"message":"310","line":13,"column":10,"nodeType":"295","messageId":"296","endLine":13,"endColumn":19},{"ruleId":"293","severity":1,"message":"311","line":19,"column":24,"nodeType":"295","messageId":"296","endLine":19,"endColumn":39},{"ruleId":"293","severity":1,"message":"312","line":22,"column":10,"nodeType":"295","messageId":"296","endLine":22,"endColumn":14},{"ruleId":"293","severity":1,"message":"313","line":24,"column":16,"nodeType":"295","messageId":"296","endLine":24,"endColumn":23},{"ruleId":"293","severity":1,"message":"314","line":30,"column":21,"nodeType":"295","messageId":"296","endLine":30,"endColumn":33},{"ruleId":"293","severity":1,"message":"315","line":35,"column":10,"nodeType":"295","messageId":"296","endLine":35,"endColumn":21},{"ruleId":"293","severity":1,"message":"316","line":35,"column":23,"nodeType":"295","messageId":"296","endLine":35,"endColumn":37},{"ruleId":"293","severity":1,"message":"317","line":37,"column":29,"nodeType":"295","messageId":"296","endLine":37,"endColumn":49},{"ruleId":"318","severity":1,"message":"319","line":40,"column":25,"nodeType":"320","messageId":"321","endLine":40,"endColumn":27},{"ruleId":"322","severity":1,"message":"323","line":42,"column":33,"nodeType":"324","messageId":"325","endLine":42,"endColumn":35},{"ruleId":"322","severity":1,"message":"323","line":49,"column":19,"nodeType":"324","messageId":"325","endLine":49,"endColumn":21},{"ruleId":"293","severity":1,"message":"326","line":71,"column":7,"nodeType":"295","messageId":"296","endLine":71,"endColumn":13},{"ruleId":"318","severity":1,"message":"319","line":122,"column":34,"nodeType":"320","messageId":"321","endLine":122,"endColumn":36},{"ruleId":"318","severity":1,"message":"319","line":146,"column":34,"nodeType":"320","messageId":"321","endLine":146,"endColumn":36},{"ruleId":"318","severity":1,"message":"319","line":171,"column":31,"nodeType":"320","messageId":"321","endLine":171,"endColumn":33},{"ruleId":"318","severity":1,"message":"319","line":193,"column":33,"nodeType":"320","messageId":"321","endLine":193,"endColumn":35},{"ruleId":"318","severity":1,"message":"319","line":217,"column":31,"nodeType":"320","messageId":"321","endLine":217,"endColumn":33},{"ruleId":"293","severity":1,"message":"327","line":313,"column":9,"nodeType":"295","messageId":"296","endLine":313,"endColumn":16},{"ruleId":"293","severity":1,"message":"328","line":338,"column":9,"nodeType":"295","messageId":"296","endLine":338,"endColumn":21},{"ruleId":"329","severity":1,"message":"330","line":420,"column":6,"nodeType":"331","endLine":420,"endColumn":8,"suggestions":"332"},{"ruleId":"333","severity":1,"message":"334","line":477,"column":17,"nodeType":"335","endLine":477,"endColumn":69},{"ruleId":"333","severity":1,"message":"334","line":491,"column":19,"nodeType":"335","endLine":491,"endColumn":59},{"ruleId":"293","severity":1,"message":"336","line":26,"column":10,"nodeType":"295","messageId":"296","endLine":26,"endColumn":19},{"ruleId":"293","severity":1,"message":"337","line":26,"column":21,"nodeType":"295","messageId":"296","endLine":26,"endColumn":33},{"ruleId":"329","severity":1,"message":"338","line":67,"column":6,"nodeType":"331","endLine":67,"endColumn":16,"suggestions":"339"},{"ruleId":"318","severity":1,"message":"319","line":46,"column":29,"nodeType":"320","messageId":"321","endLine":46,"endColumn":31},{"ruleId":"318","severity":1,"message":"319","line":62,"column":29,"nodeType":"320","messageId":"321","endLine":62,"endColumn":31},{"ruleId":"318","severity":1,"message":"319","line":77,"column":26,"nodeType":"320","messageId":"321","endLine":77,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":93,"column":28,"nodeType":"320","messageId":"321","endLine":93,"endColumn":30},{"ruleId":"318","severity":1,"message":"319","line":109,"column":27,"nodeType":"320","messageId":"321","endLine":109,"endColumn":29},{"ruleId":"333","severity":1,"message":"334","line":269,"column":17,"nodeType":"335","endLine":269,"endColumn":66},{"ruleId":"293","severity":1,"message":"340","line":5,"column":10,"nodeType":"295","messageId":"296","endLine":5,"endColumn":14},{"ruleId":"293","severity":1,"message":"341","line":11,"column":75,"nodeType":"295","messageId":"296","endLine":11,"endColumn":90},{"ruleId":"293","severity":1,"message":"342","line":64,"column":15,"nodeType":"295","messageId":"296","endLine":64,"endColumn":18},{"ruleId":"293","severity":1,"message":"342","line":76,"column":15,"nodeType":"295","messageId":"296","endLine":76,"endColumn":18},{"ruleId":"293","severity":1,"message":"342","line":120,"column":15,"nodeType":"295","messageId":"296","endLine":120,"endColumn":18},{"ruleId":"293","severity":1,"message":"342","line":132,"column":15,"nodeType":"295","messageId":"296","endLine":132,"endColumn":18},{"ruleId":"293","severity":1,"message":"342","line":191,"column":15,"nodeType":"295","messageId":"296","endLine":191,"endColumn":18},{"ruleId":"318","severity":1,"message":"319","line":29,"column":26,"nodeType":"320","messageId":"321","endLine":29,"endColumn":28},{"ruleId":"318","severity":1,"message":"319","line":45,"column":28,"nodeType":"320","messageId":"321","endLine":45,"endColumn":30},{"ruleId":"293","severity":1,"message":"343","line":57,"column":9,"nodeType":"295","messageId":"296","endLine":57,"endColumn":19},{"ruleId":"318","severity":1,"message":"319","line":61,"column":27,"nodeType":"320","messageId":"321","endLine":61,"endColumn":29},{"ruleId":"293","severity":1,"message":"344","line":15,"column":9,"nodeType":"295","messageId":"296","endLine":15,"endColumn":17},{"ruleId":"293","severity":1,"message":"306","line":4,"column":9,"nodeType":"295","messageId":"296","endLine":4,"endColumn":20},{"ruleId":"318","severity":1,"message":"319","line":70,"column":37,"nodeType":"320","messageId":"321","endLine":70,"endColumn":39},{"ruleId":"318","severity":1,"message":"319","line":93,"column":35,"nodeType":"320","messageId":"321","endLine":93,"endColumn":37},{"ruleId":"329","severity":1,"message":"345","line":222,"column":13,"nodeType":"331","endLine":222,"endColumn":21,"suggestions":"346"},{"ruleId":"333","severity":1,"message":"334","line":275,"column":23,"nodeType":"335","endLine":275,"endColumn":71},{"ruleId":"293","severity":1,"message":"304","line":2,"column":10,"nodeType":"295","messageId":"296","endLine":2,"endColumn":21},{"ruleId":"293","severity":1,"message":"347","line":2,"column":23,"nodeType":"295","messageId":"296","endLine":2,"endColumn":34},{"ruleId":"293","severity":1,"message":"310","line":5,"column":10,"nodeType":"295","messageId":"296","endLine":5,"endColumn":19},{"ruleId":"318","severity":1,"message":"319","line":21,"column":42,"nodeType":"320","messageId":"321","endLine":21,"endColumn":44},{"ruleId":"293","severity":1,"message":"340","line":5,"column":10,"nodeType":"295","messageId":"296","endLine":5,"endColumn":14},{"ruleId":"293","severity":1,"message":"348","line":9,"column":48,"nodeType":"295","messageId":"296","endLine":9,"endColumn":59},{"ruleId":"293","severity":1,"message":"349","line":3,"column":8,"nodeType":"295","messageId":"296","endLine":3,"endColumn":13},{"ruleId":"293","severity":1,"message":"306","line":4,"column":10,"nodeType":"295","messageId":"296","endLine":4,"endColumn":21},{"ruleId":"293","severity":1,"message":"297","line":8,"column":10,"nodeType":"295","messageId":"296","endLine":8,"endColumn":19},{"ruleId":"293","severity":1,"message":"307","line":8,"column":21,"nodeType":"295","messageId":"296","endLine":8,"endColumn":28},{"ruleId":"293","severity":1,"message":"294","line":9,"column":10,"nodeType":"295","messageId":"296","endLine":9,"endColumn":21},{"ruleId":"293","severity":1,"message":"350","line":10,"column":10,"nodeType":"295","messageId":"296","endLine":10,"endColumn":27},{"ruleId":"293","severity":1,"message":"308","line":10,"column":50,"nodeType":"295","messageId":"296","endLine":10,"endColumn":61},{"ruleId":"293","severity":1,"message":"351","line":10,"column":63,"nodeType":"295","messageId":"296","endLine":10,"endColumn":77},{"ruleId":"293","severity":1,"message":"309","line":11,"column":65,"nodeType":"295","messageId":"296","endLine":11,"endColumn":77},{"ruleId":"293","severity":1,"message":"310","line":13,"column":10,"nodeType":"295","messageId":"296","endLine":13,"endColumn":19},{"ruleId":"293","severity":1,"message":"352","line":13,"column":21,"nodeType":"295","messageId":"296","endLine":13,"endColumn":33},{"ruleId":"293","severity":1,"message":"353","line":20,"column":10,"nodeType":"295","messageId":"296","endLine":20,"endColumn":22},{"ruleId":"293","severity":1,"message":"311","line":20,"column":24,"nodeType":"295","messageId":"296","endLine":20,"endColumn":39},{"ruleId":"293","severity":1,"message":"312","line":23,"column":10,"nodeType":"295","messageId":"296","endLine":23,"endColumn":14},{"ruleId":"293","severity":1,"message":"354","line":24,"column":10,"nodeType":"295","messageId":"296","endLine":24,"endColumn":16},{"ruleId":"293","severity":1,"message":"355","line":25,"column":10,"nodeType":"295","messageId":"296","endLine":25,"endColumn":14},{"ruleId":"293","severity":1,"message":"313","line":25,"column":16,"nodeType":"295","messageId":"296","endLine":25,"endColumn":23},{"ruleId":"293","severity":1,"message":"356","line":39,"column":10,"nodeType":"295","messageId":"296","endLine":39,"endColumn":19},{"ruleId":"293","severity":1,"message":"357","line":42,"column":10,"nodeType":"295","messageId":"296","endLine":42,"endColumn":18},{"ruleId":"293","severity":1,"message":"358","line":42,"column":20,"nodeType":"295","messageId":"296","endLine":42,"endColumn":31},{"ruleId":"293","severity":1,"message":"359","line":46,"column":10,"nodeType":"295","messageId":"296","endLine":46,"endColumn":16},{"ruleId":"293","severity":1,"message":"360","line":46,"column":18,"nodeType":"295","messageId":"296","endLine":46,"endColumn":27},{"ruleId":"293","severity":1,"message":"361","line":47,"column":10,"nodeType":"295","messageId":"296","endLine":47,"endColumn":15},{"ruleId":"293","severity":1,"message":"362","line":47,"column":17,"nodeType":"295","messageId":"296","endLine":47,"endColumn":25},{"ruleId":"293","severity":1,"message":"363","line":48,"column":10,"nodeType":"295","messageId":"296","endLine":48,"endColumn":14},{"ruleId":"293","severity":1,"message":"364","line":48,"column":16,"nodeType":"295","messageId":"296","endLine":48,"endColumn":23},{"ruleId":"293","severity":1,"message":"365","line":49,"column":10,"nodeType":"295","messageId":"296","endLine":49,"endColumn":19},{"ruleId":"293","severity":1,"message":"314","line":49,"column":21,"nodeType":"295","messageId":"296","endLine":49,"endColumn":33},{"ruleId":"293","severity":1,"message":"366","line":51,"column":9,"nodeType":"295","messageId":"296","endLine":51,"endColumn":20},{"ruleId":"293","severity":1,"message":"367","line":52,"column":10,"nodeType":"295","messageId":"296","endLine":52,"endColumn":21},{"ruleId":"293","severity":1,"message":"368","line":53,"column":10,"nodeType":"295","messageId":"296","endLine":53,"endColumn":23},{"ruleId":"293","severity":1,"message":"369","line":53,"column":25,"nodeType":"295","messageId":"296","endLine":53,"endColumn":40},{"ruleId":"293","severity":1,"message":"315","line":54,"column":10,"nodeType":"295","messageId":"296","endLine":54,"endColumn":21},{"ruleId":"293","severity":1,"message":"316","line":54,"column":23,"nodeType":"295","messageId":"296","endLine":54,"endColumn":37},{"ruleId":"293","severity":1,"message":"370","line":56,"column":10,"nodeType":"295","messageId":"296","endLine":56,"endColumn":27},{"ruleId":"293","severity":1,"message":"317","line":56,"column":29,"nodeType":"295","messageId":"296","endLine":56,"endColumn":49},{"ruleId":"322","severity":1,"message":"323","line":60,"column":21,"nodeType":"324","messageId":"325","endLine":60,"endColumn":23},{"ruleId":"293","severity":1,"message":"371","line":69,"column":10,"nodeType":"295","messageId":"296","endLine":69,"endColumn":21},{"ruleId":"293","severity":1,"message":"372","line":69,"column":23,"nodeType":"295","messageId":"296","endLine":69,"endColumn":37},{"ruleId":"293","severity":1,"message":"373","line":70,"column":10,"nodeType":"295","messageId":"296","endLine":70,"endColumn":22},{"ruleId":"293","severity":1,"message":"374","line":70,"column":24,"nodeType":"295","messageId":"296","endLine":70,"endColumn":39},{"ruleId":"293","severity":1,"message":"375","line":76,"column":9,"nodeType":"295","messageId":"296","endLine":76,"endColumn":21},{"ruleId":"322","severity":1,"message":"376","line":100,"column":12,"nodeType":"324","messageId":"325","endLine":100,"endColumn":14},{"ruleId":"322","severity":1,"message":"376","line":112,"column":20,"nodeType":"324","messageId":"325","endLine":112,"endColumn":22},{"ruleId":"322","severity":1,"message":"323","line":115,"column":27,"nodeType":"324","messageId":"325","endLine":115,"endColumn":29},{"ruleId":"293","severity":1,"message":"377","line":135,"column":9,"nodeType":"295","messageId":"296","endLine":135,"endColumn":14},{"ruleId":"293","severity":1,"message":"378","line":136,"column":9,"nodeType":"295","messageId":"296","endLine":136,"endColumn":23},{"ruleId":"293","severity":1,"message":"379","line":137,"column":9,"nodeType":"295","messageId":"296","endLine":137,"endColumn":18},{"ruleId":"293","severity":1,"message":"380","line":203,"column":9,"nodeType":"295","messageId":"296","endLine":203,"endColumn":18},{"ruleId":"333","severity":1,"message":"334","line":234,"column":17,"nodeType":"335","endLine":234,"endColumn":69},{"ruleId":"322","severity":1,"message":"323","line":294,"column":107,"nodeType":"324","messageId":"325","endLine":294,"endColumn":109},{"ruleId":"322","severity":1,"message":"323","line":295,"column":100,"nodeType":"324","messageId":"325","endLine":295,"endColumn":102},{"ruleId":"322","severity":1,"message":"323","line":296,"column":101,"nodeType":"324","messageId":"325","endLine":296,"endColumn":103},{"ruleId":"322","severity":1,"message":"323","line":297,"column":102,"nodeType":"324","messageId":"325","endLine":297,"endColumn":104},{"ruleId":"322","severity":1,"message":"323","line":298,"column":99,"nodeType":"324","messageId":"325","endLine":298,"endColumn":101},{"ruleId":"322","severity":1,"message":"323","line":299,"column":102,"nodeType":"324","messageId":"325","endLine":299,"endColumn":104},{"ruleId":"381","severity":1,"message":"382","line":80,"column":61,"nodeType":"383","messageId":"384","endLine":80,"endColumn":83,"fix":"385"},{"ruleId":"381","severity":1,"message":"386","line":82,"column":16,"nodeType":"383","messageId":"384","endLine":82,"endColumn":38,"fix":"387"},{"ruleId":"293","severity":1,"message":"388","line":6,"column":21,"nodeType":"295","messageId":"296","endLine":6,"endColumn":24},{"ruleId":"293","severity":1,"message":"389","line":6,"column":26,"nodeType":"295","messageId":"296","endLine":6,"endColumn":43},{"ruleId":"293","severity":1,"message":"390","line":14,"column":15,"nodeType":"295","messageId":"296","endLine":14,"endColumn":21},{"ruleId":"293","severity":1,"message":"362","line":15,"column":17,"nodeType":"295","messageId":"296","endLine":15,"endColumn":25},{"ruleId":"293","severity":1,"message":"364","line":16,"column":16,"nodeType":"295","messageId":"296","endLine":16,"endColumn":23},{"ruleId":"293","severity":1,"message":"391","line":23,"column":10,"nodeType":"295","messageId":"296","endLine":23,"endColumn":21},{"ruleId":"293","severity":1,"message":"392","line":31,"column":10,"nodeType":"295","messageId":"296","endLine":31,"endColumn":18},{"ruleId":"293","severity":1,"message":"393","line":31,"column":20,"nodeType":"295","messageId":"296","endLine":31,"endColumn":31},{"ruleId":"394","severity":1,"message":"395","line":154,"column":42,"nodeType":"396","endLine":154,"endColumn":60},{"ruleId":"394","severity":1,"message":"395","line":169,"column":42,"nodeType":"396","endLine":169,"endColumn":60},{"ruleId":"333","severity":1,"message":"334","line":178,"column":7,"nodeType":"335","endLine":178,"endColumn":41},"no-native-reassign",["397"],"no-negated-in-lhs",["398"],"no-unused-vars","'userRequest' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","'getStorage' is defined but never used.","'ref' is defined but never used.","'uploadBytesResumable' is defined but never used.","'getDownloadURL' is defined but never used.","'app' is defined but never used.","'useDispatch' is defined but never used.","'addUser' is defined but never used.","'productData' is defined but never used.","'useMemo' is defined but never used.","'addProducts' is defined but never used.","'deleteObject' is defined but never used.","'addPhotos' is defined but never used.","'setProductStats' is assigned a value but never used.","'prod' is assigned a value but never used.","'setFile' is assigned a value but never used.","'setSalePrice' is assigned a value but never used.","'isUploading' is assigned a value but never used.","'setIsUploading' is assigned a value but never used.","'setMultiPhotosUpload' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'photos' is assigned a value but never used.","'storage' is assigned a value but never used.","'handleUpdate' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["399"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isWorking' is assigned a value but never used.","'setIsWorking' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'userID'. Either include them or remove the dependency array.",["400"],"'Link' is defined but never used.","'addPhotoSuccess' is defined but never used.","'res' is assigned a value but never used.","'handleSize' is assigned a value but never used.","'products' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'designId'. Either include it or remove the dependency array.",["401"],"'useSelector' is defined but never used.","'getProducts' is defined but never used.","'Chart' is defined but never used.","'addPhotosFireBase' is defined but never used.","'updateProducts' is defined but never used.","'clearXPhotos' is defined but never used.","'productStats' is assigned a value but never used.","'inputs' is assigned a value but never used.","'file' is assigned a value but never used.","'subCatPre' is assigned a value but never used.","'subTitle' is assigned a value but never used.","'setSubTitle' is assigned a value but never used.","'gender' is assigned a value but never used.","'setGender' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","'size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'salePrice' is assigned a value but never used.","'extraPhotos' is assigned a value but never used.","'isMainPhoto' is assigned a value but never used.","'isExtraPhotos' is assigned a value but never used.","'setIsExtraPhoto' is assigned a value but never used.","'multiPhotosUpload' is assigned a value but never used.","'multiPhotos' is assigned a value but never used.","'setMultiPhotos' is assigned a value but never used.","'previewFiles' is assigned a value but never used.","'setPreviewFiles' is assigned a value but never used.","'handleChange' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'items' is assigned a value but never used.","'itemsProcessed' is assigned a value but never used.","'haveFiles' is assigned a value but never used.","'handleAll' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property actions.","MemberExpression","unexpectedWhitespace",{"range":"402","text":"403"},"Unexpected whitespace before property reducer.",{"range":"404","text":"403"},"'get' is defined but never used.","'getPhotoGalleries' is defined but never used.","'setCat' is assigned a value but never used.","'galTitlePre' is assigned a value but never used.","'photoPre' is assigned a value but never used.","'setPhotoPre' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"405","fix":"406"},{"desc":"407","fix":"408"},{"desc":"409","fix":"410"},[2079,2081],".",[2119,2121],"Update the dependencies array to be: [dispatch]",{"range":"411","text":"412"},"Update the dependencies array to be: [dispatch, userEdit, userID]",{"range":"413","text":"414"},"Update the dependencies array to be: [MONTHS, designId]",{"range":"415","text":"416"},[11784,11786],"[dispatch]",[1629,1639],"[dispatch, userEdit, userID]",[7088,7096],"[MONTHS, designId]"]