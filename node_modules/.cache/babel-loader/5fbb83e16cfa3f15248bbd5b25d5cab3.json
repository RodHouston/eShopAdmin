{"ast":null,"code":"import { publicRequest, userRequest } from \"../RequestMethods\";\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, getProductFailure, getProductStart, getProductSuccess, updateProductFailure, updateProductStart, updateProductSuccess, addProductSuccess, addProductStart, addProductFailure } from \"./productRedux\";\nimport { deleteUserFailure, deleteUserStart, deleteUserSuccess, getUsersFailure, getUsersStart, getUsersSuccess, loginFailure, loginStart, loginSuccess, logOut, updateUserFailure, updateUserStart, updateUserSuccess } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\nexport const logout = async dispatch => {\n  try {\n    // const res = await publicRequest.post(\"/auth/logout\", user)\n    dispatch(logOut());\n  } catch (error) {}\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (error) {\n    dispatch(getProductFailure());\n  }\n};\nexport const updateProducts = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    //update\n    // const res = await userRequest.update(`/products/${id}`)\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (error) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const deleteProducts = async (id, product, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id, product));\n  } catch (error) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const addProducts = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (error) {\n    dispatch(addProductFailure());\n  }\n}; //////////// geT USERS //////////////\n\nexport const getUsers = async dispatch => {\n  dispatch(getUsersStart());\n\n  try {\n    const res = await publicRequest.get(\"/users\");\n    dispatch(getUsersSuccess(res.data));\n  } catch (error) {\n    dispatch(getUsersFailure());\n  }\n};\nexport const updateUser = async (id, product, dispatch) => {\n  dispatch(updateUserStart());\n\n  try {\n    //update\n    // const res = await userRequest.update(`/products/${id}`)\n    dispatch(updateUserSuccess({\n      id,\n      product\n    }));\n  } catch (error) {\n    dispatch(updateUserFailure());\n  }\n};\nexport const deleteUser = async (id, user, dispatch) => {\n  dispatch(deleteUserStart());\n\n  try {\n    const res = await userRequest.delete(`/users/${id}`);\n    dispatch(deleteUserSuccess(id, user));\n  } catch (error) {\n    dispatch(deleteUserFailure());\n  }\n};","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/apiCalls.js"],"names":["publicRequest","userRequest","deleteProductFailure","deleteProductStart","deleteProductSuccess","getProductFailure","getProductStart","getProductSuccess","updateProductFailure","updateProductStart","updateProductSuccess","addProductSuccess","addProductStart","addProductFailure","deleteUserFailure","deleteUserStart","deleteUserSuccess","getUsersFailure","getUsersStart","getUsersSuccess","loginFailure","loginStart","loginSuccess","logOut","updateUserFailure","updateUserStart","updateUserSuccess","login","dispatch","user","res","post","data","error","logout","getProducts","get","updateProducts","id","product","deleteProducts","delete","addProducts","getUsers","updateUser","deleteUser"],"mappings":"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","sourcesContent":["import { publicRequest, userRequest } from \"../RequestMethods\"\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, \n    getProductFailure, getProductStart, getProductSuccess,\n    updateProductFailure, updateProductStart, updateProductSuccess,\naddProductSuccess,addProductStart, addProductFailure } from \"./productRedux\"\nimport { deleteUserFailure, deleteUserStart, deleteUserSuccess, getUsersFailure, getUsersStart, getUsersSuccess, loginFailure, loginStart, loginSuccess, logOut, updateUserFailure, updateUserStart, updateUserSuccess } from \"./userRedux\"\n\nexport const login = async (dispatch, user)=>{\n    dispatch(loginStart())\n    try {\n        const res = await publicRequest.post(\"/auth/login\", user)\n        dispatch(loginSuccess(res.data));\n    } catch (error) {\n        dispatch(loginFailure())\n    }\n}\nexport const logout = async (dispatch)=>{    \n    try {\n        // const res = await publicRequest.post(\"/auth/logout\", user)\n        dispatch(logOut());\n    } catch (error) {\n        \n    }\n}\n\n\nexport const getProducts = async (dispatch)=>{\n    dispatch(getProductStart())\n    try {\n        const res = await publicRequest.get(\"/products\")\n        dispatch(getProductSuccess(res.data));\n    } catch (error) {\n        dispatch(getProductFailure())\n    }\n}\n\n\nexport const updateProducts = async (id, product, dispatch)=>{\n    dispatch(updateProductStart())\n    try {\n        //update\n        // const res = await userRequest.update(`/products/${id}`)\n        dispatch(updateProductSuccess({id, product}));\n    } catch (error) {\n        dispatch(updateProductFailure())\n    }\n}\n\n\nexport const deleteProducts = async (id, product, dispatch)=>{\n    dispatch(deleteProductStart())\n    try {\n        const res = await userRequest.delete(`/products/${id}`)\n        dispatch(deleteProductSuccess(id, product));\n    } catch (error) {\n        dispatch(deleteProductFailure())\n    }\n}\n\nexport const addProducts = async ( product, dispatch)=>{\n    dispatch(addProductStart())\n    try {\n        const res = await userRequest.post(`/products`, product)\n        dispatch(addProductSuccess(res.data));\n    } catch (error) {\n        dispatch(addProductFailure())\n    }\n}\n//////////// geT USERS //////////////\nexport const getUsers = async (dispatch)=>{\n    dispatch(getUsersStart())\n    try {\n        const res = await publicRequest.get(\"/users\")\n        dispatch(getUsersSuccess(res.data));\n    } catch (error) {\n        dispatch(getUsersFailure())\n    }\n}\n\n\nexport const updateUser = async (id, product, dispatch)=>{\n    dispatch(updateUserStart())\n    try {\n        //update\n        // const res = await userRequest.update(`/products/${id}`)\n        dispatch(updateUserSuccess({id, product}));\n    } catch (error) {\n        dispatch(updateUserFailure())\n    }\n}\n\n\nexport const deleteUser = async (id, user, dispatch)=>{\n    dispatch(deleteUserStart())\n    try {\n        const res = await userRequest.delete(`/users/${id}`)\n        dispatch(deleteUserSuccess(id, user));\n    } catch (error) {\n        dispatch(deleteUserFailure())\n    }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}