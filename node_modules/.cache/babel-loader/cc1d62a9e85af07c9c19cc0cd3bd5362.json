{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const designSlice = createSlice({\n  name: 'design',\n  initialState: {\n    designs: [],\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    //get all\n    getDesignStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getDesignSuccess: (state, action) => {\n      state.isFetching = false;\n      state.designs = action.payload;\n    },\n    getDesignFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //get delete\n    deleteDesignStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteDesignSuccess: (state, action) => {\n      state.isFetching = false;\n      state.designs.splice(state.designs.findIndex(item => item._id === action.payload), 1);\n    },\n    deleteDesignFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // update Design\n    updateDesignStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    updateDesignSuccess: (state, action) => {\n      state.isFetching = false;\n      state.designs[state.designs.findIndex(item => item._id === action.payload.id)] = action.payload.design;\n    },\n    updateDesignFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // Add Design\n    addDesignStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    addDesignSuccess: (state, action) => {\n      state.isFetching = false;\n      state.designs.push(action.payload);\n    },\n    addDesignFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  getDesignStart,\n  getDesignSuccess,\n  getDesignFailure,\n  deleteDesignStart,\n  deleteDesignSuccess,\n  deleteDesignFailure,\n  updateDesignSuccess,\n  updateDesignStart,\n  updateDesignFailure,\n  addDesignSuccess,\n  addDesignStart,\n  addDesignFailure\n} = designSlice.actions;\nexport default designSlice.reducer;","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/designRedux.js"],"names":["createSlice","designSlice","name","initialState","designs","isFetching","error","reducers","getDesignStart","state","getDesignSuccess","action","payload","getDesignFailure","deleteDesignStart","deleteDesignSuccess","splice","findIndex","item","_id","deleteDesignFailure","updateDesignStart","updateDesignSuccess","id","design","updateDesignFailure","addDesignStart","addDesignSuccess","push","addDesignFailure","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\n\nexport const designSlice = createSlice({\n  name: 'design',\n  initialState:{\n      designs: [],\n      isFetching: false,\n      error:false,\n  },\n  reducers: {\n      //get all\n    getDesignStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    getDesignSuccess: (state, action) => {\n      state.isFetching = false\n      state.designs = action.payload\n    },\n    getDesignFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n      //get delete\n    deleteDesignStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    deleteDesignSuccess: (state, action) => {\n      state.isFetching = false\n      state.designs.splice(\n          state.designs.findIndex((item) => item._id === action.payload),\n          1\n      )\n    },\n    deleteDesignFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n// update Design\n    updateDesignStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    updateDesignSuccess: (state, action) => {\n      state.isFetching = false\n      state.designs[\n        state.designs.findIndex((item) => item._id === action.payload.id)\n      ] = action.payload.design;\n    },\n\n    updateDesignFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n// Add Design\n    addDesignStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    addDesignSuccess: (state, action) => {\n      state.isFetching = false\n      state.designs.push(action.payload)\n    },\n\n    addDesignFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n  },\n});\n\nexport const { getDesignStart, getDesignSuccess, getDesignFailure, \n  deleteDesignStart, deleteDesignSuccess, deleteDesignFailure,\nupdateDesignSuccess, updateDesignStart,updateDesignFailure, addDesignSuccess, addDesignStart, addDesignFailure} = designSlice.actions;\n\nexport default designSlice.reducer;"]},"metadata":{},"sourceType":"module"}