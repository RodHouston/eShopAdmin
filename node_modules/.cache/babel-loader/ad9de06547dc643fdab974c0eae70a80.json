{"ast":null,"code":"import { publicRequest, userRequest } from \"../RequestMethods\";\nimport { addDesignFailure, addDesignStart, addDesignSuccess, deleteDesignFailure, deleteDesignStart, deleteDesignSuccess, getDesignFailure, getDesignStart, getDesignSuccess, updateDesignFailure, updateDesignStart, updateDesignSuccess } from \"./designRedux\";\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, getProductFailure, getProductStart, getProductSuccess, updateProductFailure, updateProductStart, updateProductSuccess, addProductSuccess, addProductStart, addProductFailure, addPhotoStart, addPhotoSuccess, addPhotoFailure } from \"./productRedux\";\nimport { getUserByIdStart, getUserByIdSuccess, getUserByIdFailure, deleteUserFailure, deleteUserStart, deleteUserSuccess, getUsersFailure, getUsersStart, getUsersSuccess, loginFailure, loginStart, loginSuccess, logOut, updateUserFailure, updateUserStart, updateUserSuccess } from \"./userRedux\";\nimport AddPhotoToFireBase from \"./toFirebase.js\";\nimport { addCategoryFailure, addCategoryStart, addCategorySuccess, getCategoryFailure, getCategoryStart, getCategorySuccess } from \"./productCategoryRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    console.log(\"inside login catch\");\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\nexport const logout = async dispatch => {\n  try {\n    // const res = await publicRequest.post(\"/auth/logout\", user)\n    dispatch(logOut());\n  } catch (error) {}\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (error) {\n    dispatch(getProductFailure());\n  }\n};\nexport const updateProducts = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    console.log('in update product apicall'); //update\n\n    const res = await userRequest.put(`/products/${id}`, product);\n    console.log(\"Successful upload\");\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (error) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const deleteProducts = async (id, product, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id, product));\n  } catch (error) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const addProducts = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    // console.log(\"inside add product\");\n    const res = await userRequest.post(`/products`, product); // console.log(\"after add product\");\n\n    dispatch(addProductSuccess(res.data));\n  } catch (error) {\n    dispatch(addProductFailure());\n  }\n}; // //////// GET DESIGNS ///////////\n\nexport const getDesigns = async dispatch => {\n  dispatch(getDesignStart());\n  console.log('here');\n\n  try {\n    const res = await publicRequest.get(\"/designs\"); // console.log(res.data);\n\n    dispatch(getDesignSuccess(res.data));\n  } catch (error) {\n    dispatch(getDesignFailure());\n  }\n};\nexport const updateDesigns = async (id, design, dispatch) => {\n  dispatch(updateDesignStart());\n\n  try {\n    console.log('in update product apicall'); //update\n\n    const res = await userRequest.put(`/designs/${id}`, design); // console.log(res);\n\n    dispatch(updateDesignSuccess({\n      id,\n      design\n    }));\n  } catch (error) {\n    dispatch(updateDesignFailure());\n  }\n};\nexport const deleteDesigns = async (id, design, dispatch) => {\n  dispatch(deleteDesignStart());\n\n  try {\n    const res = await userRequest.delete(`/designs/${id}`);\n    dispatch(deleteDesignSuccess(id, design));\n  } catch (error) {\n    dispatch(deleteDesignFailure());\n  }\n};\nexport const addDesigns = async (design, dispatch) => {\n  dispatch(addDesignStart());\n\n  try {\n    const res = await userRequest.post(`/designs`, design);\n    dispatch(addDesignSuccess(res.data));\n  } catch (error) {\n    dispatch(addDesignFailure());\n  }\n}; //////GET USERS////////\n\nexport const getUsers = async dispatch => {\n  dispatch(getUsersStart());\n\n  try {\n    console.log(\"in get user apiCAll\");\n    const res = await userRequest.get(\"/users\");\n    dispatch(getUsersSuccess(res.data));\n  } catch (error) {\n    dispatch(getUsersFailure());\n  }\n};\nexport const getUserById = async (id, user, dispatch) => {\n  dispatch(getUserByIdStart());\n\n  try {\n    const res = await userRequest.get(`/users/find/${id}`);\n    dispatch(getUserByIdSuccess(res.data));\n  } catch (error) {\n    console.log(error);\n    dispatch(getUserByIdFailure());\n  }\n};\nexport const updateUser = async (id, user, dispatch) => {\n  dispatch(updateUserStart());\n\n  try {\n    //update\n    const res = await userRequest.put(`/users/${id}`, user); // console.log(\"in api call update user\");\n\n    dispatch(updateUserSuccess(res.data));\n  } catch (error) {\n    dispatch(updateUserFailure());\n  }\n};\nexport const deleteUser = async (id, user, dispatch) => {\n  dispatch(deleteUserStart());\n\n  try {\n    const res = await userRequest.delete(`/users/${id}`);\n    dispatch(deleteUserSuccess(id, user));\n  } catch (error) {\n    dispatch(deleteUserFailure());\n  }\n};\nexport const addPhotosFireBase = async (multiPhotos, mainPhoto, product, isMainPhoto, isExtraPhotos, dispatch) => {\n  dispatch(addPhotoStart());\n\n  try {\n    const res = await AddPhotoToFireBase(multiPhotos, mainPhoto, product, isMainPhoto, isExtraPhotos, dispatch);\n    console.log(res); // dispatch(addPhotoSuccess());\n  } catch (error) {\n    dispatch(addPhotoFailure());\n  }\n}; ///////////CATEGORIES//////\n//GET CATS \n\nexport const getProductCategories = async dispatch => {\n  dispatch(getCategoryStart());\n\n  try {\n    const res = await publicRequest.get(\"/productCategories\");\n    dispatch(getCategorySuccess(res.data));\n  } catch (error) {\n    dispatch(getCategoryFailure());\n  }\n}; //ADD CATS\n\nexport const addProductCatergory = async (category, dispatch) => {\n  dispatch(addCategoryStart());\n\n  try {\n    console.log(\"inside add cat\");\n    const res = await publicRequest.post(`/productCategories`, category);\n    console.log(\"after add cat\");\n    dispatch(addCategorySuccess(res.data));\n  } catch (error) {\n    dispatch(addCategoryFailure());\n  }\n}; //ADD TO GALLERY\n\nexport const addPhotoToGallery = async (photo, dispatch) => {\n  dispatch(addPhotoToGalleryStart());\n\n  try {\n    console.log(\"inside add photo\");\n    const res = await publicRequest.post(`/photoGallery`, photo);\n    dispatch(addPhotoToGallerySuccess(res.data));\n  } catch (error) {\n    dispatch(addPhotoToGalleryFailure());\n  }\n};","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/apiCalls.js"],"names":["publicRequest","userRequest","addDesignFailure","addDesignStart","addDesignSuccess","deleteDesignFailure","deleteDesignStart","deleteDesignSuccess","getDesignFailure","getDesignStart","getDesignSuccess","updateDesignFailure","updateDesignStart","updateDesignSuccess","deleteProductFailure","deleteProductStart","deleteProductSuccess","getProductFailure","getProductStart","getProductSuccess","updateProductFailure","updateProductStart","updateProductSuccess","addProductSuccess","addProductStart","addProductFailure","addPhotoStart","addPhotoSuccess","addPhotoFailure","getUserByIdStart","getUserByIdSuccess","getUserByIdFailure","deleteUserFailure","deleteUserStart","deleteUserSuccess","getUsersFailure","getUsersStart","getUsersSuccess","loginFailure","loginStart","loginSuccess","logOut","updateUserFailure","updateUserStart","updateUserSuccess","AddPhotoToFireBase","addCategoryFailure","addCategoryStart","addCategorySuccess","getCategoryFailure","getCategoryStart","getCategorySuccess","login","dispatch","user","res","post","console","log","data","error","logout","getProducts","get","updateProducts","id","product","put","deleteProducts","delete","addProducts","getDesigns","updateDesigns","design","deleteDesigns","addDesigns","getUsers","getUserById","updateUser","deleteUser","addPhotosFireBase","multiPhotos","mainPhoto","isMainPhoto","isExtraPhotos","getProductCategories","addProductCatergory","category","addPhotoToGallery","photo","addPhotoToGalleryStart","addPhotoToGallerySuccess","addPhotoToGalleryFailure"],"mappings":"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","sourcesContent":["import { publicRequest, userRequest } from \"../RequestMethods\"\nimport {\n    addDesignFailure, addDesignStart, addDesignSuccess, deleteDesignFailure, deleteDesignStart,\n    deleteDesignSuccess, getDesignFailure, getDesignStart, getDesignSuccess, updateDesignFailure,\n    updateDesignStart, updateDesignSuccess\n} from \"./designRedux\"\nimport {\n    deleteProductFailure, deleteProductStart, deleteProductSuccess,\n    getProductFailure, getProductStart, getProductSuccess,\n    updateProductFailure, updateProductStart, updateProductSuccess,\n    addProductSuccess, addProductStart, addProductFailure, addPhotoStart, addPhotoSuccess, addPhotoFailure\n} from \"./productRedux\"\nimport {\n    getUserByIdStart, getUserByIdSuccess, getUserByIdFailure, deleteUserFailure,\n    deleteUserStart, deleteUserSuccess, getUsersFailure, getUsersStart, getUsersSuccess,\n    loginFailure, loginStart, loginSuccess, logOut, updateUserFailure, updateUserStart,\n    updateUserSuccess\n} from \"./userRedux\"\n\nimport AddPhotoToFireBase from \"./toFirebase.js\"\nimport { addCategoryFailure, addCategoryStart, addCategorySuccess, getCategoryFailure, getCategoryStart, getCategorySuccess } from \"./productCategoryRedux\"\n\n\n\nexport const login = async (dispatch, user) => {\n    dispatch(loginStart())\n    try {\n\n        const res = await publicRequest.post(\"/auth/login\", user)\n        console.log(\"inside login catch\");\n        dispatch(loginSuccess(res.data));\n    } catch (error) {\n\n        dispatch(loginFailure())\n    }\n}\nexport const logout = async (dispatch) => {\n    try {\n        // const res = await publicRequest.post(\"/auth/logout\", user)\n        dispatch(logOut());\n    } catch (error) {\n\n    }\n}\n\n\nexport const getProducts = async (dispatch) => {\n    dispatch(getProductStart())\n    try {\n        const res = await publicRequest.get(\"/products\")\n        dispatch(getProductSuccess(res.data));\n    } catch (error) {\n        dispatch(getProductFailure())\n    }\n}\n\n\nexport const updateProducts = async (id, product, dispatch) => {\n    dispatch(updateProductStart())\n    try {\n        console.log('in update product apicall');\n        //update\n        const res = await userRequest.put(`/products/${id}`, product)\n        console.log(\"Successful upload\");\n        dispatch(updateProductSuccess({ id, product }));\n    } catch (error) {\n        dispatch(updateProductFailure())\n    }\n}\n\n\nexport const deleteProducts = async (id, product, dispatch) => {\n    dispatch(deleteProductStart())\n    try {\n        const res = await userRequest.delete(`/products/${id}`)\n        dispatch(deleteProductSuccess(id, product));\n    } catch (error) {\n        dispatch(deleteProductFailure())\n    }\n}\n\n\n\nexport const addProducts = async (product, dispatch) => {\n    dispatch(addProductStart())\n    try {\n        // console.log(\"inside add product\");\n        const res = await userRequest.post(`/products`, product)\n        // console.log(\"after add product\");\n        dispatch(addProductSuccess(res.data));\n    } catch (error) {\n        dispatch(addProductFailure())\n    }\n}\n\n\n\n\n// //////// GET DESIGNS ///////////\nexport const getDesigns = async (dispatch) => {\n    dispatch(getDesignStart())\n    console.log('here');\n    try {\n        const res = await publicRequest.get(\"/designs\")\n        // console.log(res.data);\n        dispatch(getDesignSuccess(res.data));\n    } catch (error) {\n        dispatch(getDesignFailure())\n    }\n}\n\n\nexport const updateDesigns = async (id, design, dispatch) => {\n    dispatch(updateDesignStart())\n\n    try {\n        console.log('in update product apicall');\n        //update\n        const res = await userRequest.put(`/designs/${id}`, design)\n        // console.log(res);\n        dispatch(updateDesignSuccess({ id, design }));\n    } catch (error) {\n        dispatch(updateDesignFailure())\n    }\n}\n\n\nexport const deleteDesigns = async (id, design, dispatch) => {\n    dispatch(deleteDesignStart())\n    try {\n        const res = await userRequest.delete(`/designs/${id}`)\n        dispatch(deleteDesignSuccess(id, design));\n    } catch (error) {\n        dispatch(deleteDesignFailure())\n    }\n}\n\nexport const addDesigns = async (design, dispatch) => {\n    dispatch(addDesignStart())\n    try {\n        const res = await userRequest.post(`/designs`, design)\n        dispatch(addDesignSuccess(res.data));\n    } catch (error) {\n        dispatch(addDesignFailure())\n    }\n}\n\n\n\n//////GET USERS////////\nexport const getUsers = async (dispatch) => {\n    dispatch(getUsersStart())\n    try {\n        console.log(\"in get user apiCAll\");\n        const res = await userRequest.get(\"/users\")\n        dispatch(getUsersSuccess(res.data));\n    } catch (error) {\n        dispatch(getUsersFailure())\n    }\n}\n\nexport const getUserById = async (id, user, dispatch) => {\n    dispatch(getUserByIdStart())\n    try {\n        const res = await userRequest.get(`/users/find/${id}`)\n        dispatch(getUserByIdSuccess(res.data));\n    } catch (error) {\n        console.log(error);\n        dispatch(getUserByIdFailure())\n    }\n}\n\nexport const updateUser = async (id, user, dispatch) => {\n    dispatch(updateUserStart())\n    try {\n        //update\n\n        const res = await userRequest.put(`/users/${id}`, user)\n        // console.log(\"in api call update user\");\n        dispatch(updateUserSuccess(res.data));\n    } catch (error) {\n        dispatch(updateUserFailure())\n    }\n}\n\n\nexport const deleteUser = async (id, user, dispatch) => {\n    dispatch(deleteUserStart())\n    try {\n        const res = await userRequest.delete(`/users/${id}`)\n        dispatch(deleteUserSuccess(id, user));\n    } catch (error) {\n        dispatch(deleteUserFailure())\n    }\n}\n\nexport const addPhotosFireBase = async (multiPhotos, mainPhoto, product, isMainPhoto, isExtraPhotos, dispatch) => {\n    dispatch(addPhotoStart())\n    try {\n        const res = await AddPhotoToFireBase(multiPhotos, mainPhoto, product, isMainPhoto, isExtraPhotos, dispatch)\n        console.log(res);\n        // dispatch(addPhotoSuccess());\n    } catch (error) {\n        dispatch(addPhotoFailure())\n    }\n}\n\n\n\n///////////CATEGORIES//////\n//GET CATS \nexport const getProductCategories = async (dispatch) => {\n    dispatch(getCategoryStart())\n    try {\n        const res = await publicRequest.get(\"/productCategories\")\n        dispatch(getCategorySuccess(res.data));\n    } catch (error) {\n        dispatch(getCategoryFailure())\n    }\n}\n\n//ADD CATS\n\nexport const addProductCatergory = async (category, dispatch) => {\n    dispatch(addCategoryStart())\n    try {\n        console.log(\"inside add cat\");\n        const res = await publicRequest.post(`/productCategories`, category)\n        console.log(\"after add cat\");\n        dispatch(addCategorySuccess(res.data));\n    } catch (error) {\n        dispatch(addCategoryFailure())\n    }\n}\n\n\n//ADD TO GALLERY\n\nexport const addPhotoToGallery = async (photo, dispatch) => {\n    dispatch(addPhotoToGalleryStart())\n    try {\n        console.log(\"inside add photo\");\n        const res = await publicRequest.post(`/photoGallery`, photo)\n        \n        dispatch(addPhotoToGallerySuccess(res.data));\n    } catch (error) {\n        dispatch(addPhotoToGalleryFailure())\n    }\n}\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}