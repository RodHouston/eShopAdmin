{"ast":null,"code":"import { publicRequest } from \"../RequestMethods\";\nimport { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductnStart());\n\n  try {\n    const res = await publicRequest.post(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (error) {\n    dispatch(getProductFailure());\n  }\n};","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/apiCalls.js"],"names":["publicRequest","loginFailure","loginStart","loginSuccess","login","dispatch","user","res","post","data","error","getProducts","getProductnStart","getProductSuccess","getProductFailure"],"mappings":"AAAA,SAASA,aAAT,QAA8B,mBAA9B;AACA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,QAAuD,aAAvD;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAAwB;AACzCD,EAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;;AACA,MAAI;AACA,UAAMK,GAAG,GAAG,MAAMP,aAAa,CAACQ,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;AACAD,IAAAA,QAAQ,CAACF,YAAY,CAACI,GAAG,CAACE,IAAL,CAAb,CAAR;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACH;AACJ,CARM;AASP,OAAO,MAAMU,WAAW,GAAG,MAAON,QAAP,IAAkB;AACzCA,EAAAA,QAAQ,CAACO,gBAAgB,EAAjB,CAAR;;AACA,MAAI;AACA,UAAML,GAAG,GAAG,MAAMP,aAAa,CAACQ,IAAd,CAAmB,WAAnB,CAAlB;AACAH,IAAAA,QAAQ,CAACQ,iBAAiB,CAACN,GAAG,CAACE,IAAL,CAAlB,CAAR;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAACS,iBAAiB,EAAlB,CAAR;AACH;AACJ,CARM","sourcesContent":["import { publicRequest } from \"../RequestMethods\"\nimport { loginFailure, loginStart, loginSuccess } from \"./userRedux\"\n\nexport const login = async (dispatch, user)=>{\n    dispatch(loginStart())\n    try {\n        const res = await publicRequest.post(\"/auth/login\", user)\n        dispatch(loginSuccess(res.data));\n    } catch (error) {\n        dispatch(loginFailure())\n    }\n}\nexport const getProducts = async (dispatch)=>{\n    dispatch(getProductnStart())\n    try {\n        const res = await publicRequest.post(\"/products\")\n        dispatch(getProductSuccess(res.data));\n    } catch (error) {\n        dispatch(getProductFailure())\n    }\n}"]},"metadata":{},"sourceType":"module"}