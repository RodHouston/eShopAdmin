{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState: {\n    categories: [],\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    //get all\n    getCategoryStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getCategorySuccess: (state, action) => {\n      state.isFetching = false;\n      state.categories = action.payload;\n    },\n    getCategoryFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //get delete\n    deleteCategoryStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteCategorySuccess: (state, action) => {\n      state.isFetching = false;\n      state.categories.splice(state.categories.findIndex(item => item._id === action.payload), 1);\n    },\n    deleteCategoryFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // update product\n    updateCategoryStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    updateCategorySuccess: (state, action) => {\n      state.isFetching = false;\n      state.categories[state.categories.findIndex(item => item._id === action.payload.id)] = action.payload.product;\n    },\n    updateCategoryFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // Add product\n    addCategoryStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    addCategorySuccess: (state, action) => {\n      state.isFetching = false;\n      state.category.push(action.payload);\n    },\n    addCategoryFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  getCategoryStart,\n  getCategorySuccess,\n  getCategoryFailure,\n  deleteCategoryStart,\n  deleteCategorySuccess,\n  deleteCategoryFailure,\n  updateCategorySuccess,\n  updateCategoryStart,\n  updateCategoryFailure,\n  addCategorySuccess,\n  addCategoryStart,\n  addCategoryFailure\n} = categorySlice.actions;\nexport default categorySlice.reducer;","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/productCategoryRedux.js"],"names":["createSlice","categorySlice","name","initialState","categories","isFetching","error","reducers","getCategoryStart","state","getCategorySuccess","action","payload","getCategoryFailure","deleteCategoryStart","deleteCategorySuccess","splice","findIndex","item","_id","deleteCategoryFailure","updateCategoryStart","updateCategorySuccess","id","product","updateCategoryFailure","addCategoryStart","addCategorySuccess","category","push","addCategoryFailure","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\n\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState:{\n      categories: [],\n      isFetching: false,\n      error:false,      \n  },\n  reducers: {\n      //get all\n    getCategoryStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    getCategorySuccess: (state, action) => {\n      state.isFetching = false\n      state.categories = action.payload\n    },\n    getCategoryFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n      //get delete\n    deleteCategoryStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    deleteCategorySuccess: (state, action) => {\n      state.isFetching = false\n      state.categories.splice(\n          state.categories.findIndex((item) => item._id === action.payload),\n          1\n      )\n    },\n    deleteCategoryFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n// update product\n    updateCategoryStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    updateCategorySuccess: (state, action) => {\n      state.isFetching = false\n      state.categories[\n        state.categories.findIndex((item) => item._id === action.payload.id)\n      ] = action.payload.product;\n    },\n\n    updateCategoryFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n// Add product\n    addCategoryStart: (state) => {\n      state.isFetching = true \n      state.error = false \n    },\n    addCategorySuccess: (state, action) => {\n      state.isFetching = false\n      state.category.push(action.payload)\n    },\n\n    addCategoryFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n  },\n});\n\nexport const { getCategoryStart, getCategorySuccess, getCategoryFailure, \n  deleteCategoryStart, deleteCategorySuccess, deleteCategoryFailure,\nupdateCategorySuccess, updateCategoryStart,updateCategoryFailure, \naddCategorySuccess, addCategoryStart, addCategoryFailure} = categorySlice .actions;\n\nexport default categorySlice .reducer;"]},"metadata":{},"sourceType":"module"}