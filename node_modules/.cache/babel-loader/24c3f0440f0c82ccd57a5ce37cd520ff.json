{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";var userSlice=createSlice({name:\"user\",initialState:{currentUser:null,isFetching:false,error:false},reducers:{loginStart:function loginStart(state){state.isFetching=true;},loginSuccess:function loginSuccess(state,action){state.isFetching=false;state.currentUser=action.payload;},loginFailure:function loginFailure(state){state.isFetching=false;state.error=true;},logOut:function logOut(state){state.currentUser=null;}}});var _userSlice$actions=userSlice.actions,loginStart=_userSlice$actions.loginStart,loginSuccess=_userSlice$actions.loginSuccess,loginFailure=_userSlice$actions.loginFailure,logOut=_userSlice$actions.logOut;export{loginStart,loginSuccess,loginFailure,logOut};export default userSlice.reducer;","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","logOut","actions","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA6B,kBAA7B,CAEA,GAAMC,CAAAA,SAAS,CAAGD,WAAW,CAAC,CAC1BE,IAAI,CAAE,MADoB,CAE1BC,YAAY,CAAE,CACXC,WAAW,CAAE,IADF,CAEXC,UAAU,CAAE,KAFD,CAGXC,KAAK,CAAE,KAHI,CAFY,CAO1BC,QAAQ,CAAC,CACLC,UAAU,CAAC,oBAACC,KAAD,CAAS,CAChBA,KAAK,CAACJ,UAAN,CAAiB,IAAjB,CACH,CAHI,CAILK,YAAY,CAAC,sBAACD,KAAD,CAAQE,MAAR,CAAiB,CAC1BF,KAAK,CAACJ,UAAN,CAAiB,KAAjB,CACAI,KAAK,CAACL,WAAN,CAAkBO,MAAM,CAACC,OAAzB,CACH,CAPI,CAQLC,YAAY,CAAC,sBAACJ,KAAD,CAAS,CAClBA,KAAK,CAACJ,UAAN,CAAiB,KAAjB,CACAI,KAAK,CAACH,KAAN,CAAc,IAAd,CACH,CAXI,CAaLQ,MAAM,CAAE,gBAACL,KAAD,CAAW,CACfA,KAAK,CAACL,WAAN,CAAoB,IAApB,CACH,CAfI,CAPiB,CAAD,CAA7B,C,uBA0BkEH,SAAS,CAACc,O,CAA7DP,U,oBAAAA,U,CAAYE,Y,oBAAAA,Y,CAAcG,Y,oBAAAA,Y,CAAeC,M,oBAAAA,M,qDACxD,cAAeb,CAAAA,SAAS,CAACe,OAAzB","sourcesContent":["import { createSlice  } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n       currentUser: null,\n       isFetching: false,\n       error: false\n    },\n    reducers:{\n        loginStart:(state)=>{\n            state.isFetching=true;\n        },\n        loginSuccess:(state, action)=>{\n            state.isFetching=false;\n            state.currentUser=action.payload;\n        },\n        loginFailure:(state)=>{\n            state.isFetching=false;\n            state.error = true;\n        },    \n        \n        logOut: (state) => {\n            state.currentUser = null\n        }\n    }\n})\n\nexport const { loginStart, loginSuccess, loginFailure , logOut} = userSlice.actions;\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}