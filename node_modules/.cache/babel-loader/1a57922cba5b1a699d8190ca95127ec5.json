{"ast":null,"code":"import { publicRequest, userRequest } from \"../RequestMethods\";\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, getProductFailure, getProductStart, getProductSuccess, updateProductFailure, updateProductStart, updateProductSuccess, addProductSuccess, addProductStart, addProductFailure } from \"./productRedux\";\nimport { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (error) {\n    dispatch(getProductFailure());\n  }\n};\nexport const updateProducts = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    //update\n    // const res = await userRequest.update(`/products/${id}`)\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (error) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const deleteProducts = async (id, product, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    // const res = await userRequest.delete(`/products/${id}`)\n    dispatch(deleteProductSuccess(id, product));\n  } catch (error) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const addProducts = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products`, {\n      product\n    });\n    dispatch(addProductSuccess(res.data));\n  } catch (error) {\n    dispatch(addProductFailure());\n  }\n};","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/apiCalls.js"],"names":["publicRequest","userRequest","deleteProductFailure","deleteProductStart","deleteProductSuccess","getProductFailure","getProductStart","getProductSuccess","updateProductFailure","updateProductStart","updateProductSuccess","addProductSuccess","addProductStart","addProductFailure","loginFailure","loginStart","loginSuccess","login","dispatch","user","res","post","data","error","getProducts","get","updateProducts","id","product","deleteProducts","addProducts"],"mappings":"AAAA,SAASA,aAAT,EAAwBC,WAAxB,QAA2C,mBAA3C;AACA,SAASC,oBAAT,EAA+BC,kBAA/B,EAAmDC,oBAAnD,EACIC,iBADJ,EACuBC,eADvB,EACwCC,iBADxC,EAEIC,oBAFJ,EAE0BC,kBAF1B,EAE8CC,oBAF9C,EAGAC,iBAHA,EAGkBC,eAHlB,EAGmCC,iBAHnC,QAG4D,gBAH5D;AAIA,SAASC,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,QAAuD,aAAvD;AAEA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAAwB;AACzCD,EAAAA,QAAQ,CAACH,UAAU,EAAX,CAAR;;AACA,MAAI;AACA,UAAMK,GAAG,GAAG,MAAMpB,aAAa,CAACqB,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;AACAD,IAAAA,QAAQ,CAACF,YAAY,CAACI,GAAG,CAACE,IAAL,CAAb,CAAR;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAACJ,YAAY,EAAb,CAAR;AACH;AACJ,CARM;AAWP,OAAO,MAAMU,WAAW,GAAG,MAAON,QAAP,IAAkB;AACzCA,EAAAA,QAAQ,CAACZ,eAAe,EAAhB,CAAR;;AACA,MAAI;AACA,UAAMc,GAAG,GAAG,MAAMpB,aAAa,CAACyB,GAAd,CAAkB,WAAlB,CAAlB;AACAP,IAAAA,QAAQ,CAACX,iBAAiB,CAACa,GAAG,CAACE,IAAL,CAAlB,CAAR;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAACb,iBAAiB,EAAlB,CAAR;AACH;AACJ,CARM;AAWP,OAAO,MAAMqB,cAAc,GAAG,OAAOC,EAAP,EAAWC,OAAX,EAAoBV,QAApB,KAA+B;AACzDA,EAAAA,QAAQ,CAACT,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACA;AACA;AACAS,IAAAA,QAAQ,CAACR,oBAAoB,CAAC;AAACiB,MAAAA,EAAD;AAAKC,MAAAA;AAAL,KAAD,CAArB,CAAR;AACH,GAJD,CAIE,OAAOL,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAACV,oBAAoB,EAArB,CAAR;AACH;AACJ,CATM;AAYP,OAAO,MAAMqB,cAAc,GAAG,OAAOF,EAAP,EAAWC,OAAX,EAAoBV,QAApB,KAA+B;AACzDA,EAAAA,QAAQ,CAACf,kBAAkB,EAAnB,CAAR;;AACA,MAAI;AACA;AACAe,IAAAA,QAAQ,CAACd,oBAAoB,CAACuB,EAAD,EAAKC,OAAL,CAArB,CAAR;AACH,GAHD,CAGE,OAAOL,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAChB,oBAAoB,EAArB,CAAR;AACH;AACJ,CARM;AASP,OAAO,MAAM4B,WAAW,GAAG,OAAQF,OAAR,EAAiBV,QAAjB,KAA4B;AACnDA,EAAAA,QAAQ,CAACN,eAAe,EAAhB,CAAR;;AACA,MAAI;AACA,UAAMQ,GAAG,GAAG,MAAMnB,WAAW,CAACoB,IAAZ,CAAkB,WAAlB,EAA8B;AAACO,MAAAA;AAAD,KAA9B,CAAlB;AACAV,IAAAA,QAAQ,CAACP,iBAAiB,CAACS,GAAG,CAACE,IAAL,CAAlB,CAAR;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAACL,iBAAiB,EAAlB,CAAR;AACH;AACJ,CARM","sourcesContent":["import { publicRequest, userRequest } from \"../RequestMethods\"\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, \n    getProductFailure, getProductStart, getProductSuccess,\n    updateProductFailure, updateProductStart, updateProductSuccess,\naddProductSuccess,addProductStart, addProductFailure } from \"./productRedux\"\nimport { loginFailure, loginStart, loginSuccess } from \"./userRedux\"\n\nexport const login = async (dispatch, user)=>{\n    dispatch(loginStart())\n    try {\n        const res = await publicRequest.post(\"/auth/login\", user)\n        dispatch(loginSuccess(res.data));\n    } catch (error) {\n        dispatch(loginFailure())\n    }\n}\n\n\nexport const getProducts = async (dispatch)=>{\n    dispatch(getProductStart())\n    try {\n        const res = await publicRequest.get(\"/products\")\n        dispatch(getProductSuccess(res.data));\n    } catch (error) {\n        dispatch(getProductFailure())\n    }\n}\n\n\nexport const updateProducts = async (id, product, dispatch)=>{\n    dispatch(updateProductStart())\n    try {\n        //update\n        // const res = await userRequest.update(`/products/${id}`)\n        dispatch(updateProductSuccess({id, product}));\n    } catch (error) {\n        dispatch(updateProductFailure())\n    }\n}\n\n\nexport const deleteProducts = async (id, product, dispatch)=>{\n    dispatch(deleteProductStart())\n    try {\n        // const res = await userRequest.delete(`/products/${id}`)\n        dispatch(deleteProductSuccess(id, product));\n    } catch (error) {\n        dispatch(deleteProductFailure())\n    }\n}\nexport const addProducts = async ( product, dispatch)=>{\n    dispatch(addProductStart())\n    try {\n        const res = await userRequest.post(`/products`, {product})\n        dispatch(addProductSuccess(res.data));\n    } catch (error) {\n        dispatch(addProductFailure())\n    }\n}"]},"metadata":{},"sourceType":"module"}