{"ast":null,"code":"var _jsxFileName = \"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/productCategories/ProductCatList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./productCatList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { deleteProducts, getProductCategories, getProducts } from \"../../redux/apiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ProductCatList() {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const categories = useSelector(state => state.categories);\n  useEffect(() => {\n    getProductCategories(dispatch);\n  }, [dispatch]);\n\n  const handleDelete = id => {\n    deleteProducts(id, dispatch);\n  };\n\n  console.log(categories);\n  const columns = [{\n    field: \"_id\",\n    headerName: \"ID\",\n    width: 220\n  }, {\n    field: \"category\",\n    headerName: \"Category\",\n    width: 200,\n    renderCell: params => {\n      // console.log(params.row);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"productListItem\",\n        \"min-width\": \"100%\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"productListImg\",\n          src: params.row.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), params.row.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"inStock\",\n    headerName: \"Stock\",\n    width: 150\n  }, {\n    field: \"inventory\",\n    headerName: \"Inventory\",\n    width: 150\n  }, {\n    field: \"price\",\n    headerName: \"Price\",\n    width: 160\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"productListEdit\",\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"productListDelete\",\n          onClick: () => handleDelete(params.row._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: categories,\n      disableSelectionOnClick: true,\n      columns: columns,\n      getRowId: row => row._id,\n      pageSize: 8,\n      checkboxSelection: true,\n      onRowClick: (params, event) => {\n        history.push('/product/' + params.id);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductCatList, \"zBRALOE8JS0++8NtT6kmT7a19/c=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = ProductCatList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCatList\");","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/productCategories/ProductCatList.jsx"],"names":["DataGrid","DeleteOutline","Link","useHistory","useDispatch","useSelector","useEffect","deleteProducts","getProductCategories","getProducts","ProductCatList","dispatch","history","categories","state","handleDelete","id","console","log","columns","field","headerName","width","renderCell","params","row","img","title","_id","event","push"],"mappings":";;;AAAA,OAAO,sBAAP;AACA,SAASA,QAAT,QAAyB,wBAAzB;AACA,SAASC,aAAT,QAA8B,oBAA9B;AAEA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,EAAyBC,oBAAzB,EAA+CC,WAA/C,QAAkE,sBAAlE;;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAEvC,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGT,UAAU,EAA1B;AACA,QAAMU,UAAU,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACD,UAAlB,CAA9B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AAEdE,IAAAA,oBAAoB,CAACG,QAAD,CAApB;AAED,GAJQ,EAIN,CAACA,QAAD,CAJM,CAAT;;AAOA,QAAMI,YAAY,GAAIC,EAAD,IAAQ;AAC3BT,IAAAA,cAAc,CAACS,EAAD,EAAKL,QAAL,CAAd;AACD,GAFD;;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,UAAZ;AAGA,QAAMM,OAAO,GAAG,CACd;AAAEC,IAAAA,KAAK,EAAE,KAAT;AAAgBC,IAAAA,UAAU,EAAE,IAA5B;AAAkCC,IAAAA,KAAK,EAAE;AAAzC,GADc,EAEd;AACEF,IAAAA,KAAK,EAAE,UADT;AAEEC,IAAAA,UAAU,EAAE,UAFd;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEC,IAAAA,UAAU,EAAGC,MAAD,IAAY;AACtB;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,qBAAU,MAA3C;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAgC,UAAA,GAAG,EAAEA,MAAM,CAACC,GAAP,CAAWC,GAAhD;AAAqD,UAAA,GAAG,EAAC;AAAzD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGF,MAAM,CAACC,GAAP,CAAWE,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD;AAbH,GAFc,EAiBd;AAAEP,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,UAAU,EAAE,OAAhC;AAAyCC,IAAAA,KAAK,EAAE;AAAhD,GAjBc,EAkBd;AAAEF,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,UAAU,EAAE,WAAlC;AAA+CC,IAAAA,KAAK,EAAE;AAAtD,GAlBc,EAmBd;AACEF,IAAAA,KAAK,EAAE,OADT;AAEEC,IAAAA,UAAU,EAAE,OAFd;AAGEC,IAAAA,KAAK,EAAE;AAHT,GAnBc,EAwBd;AACEF,IAAAA,KAAK,EAAE,QADT;AAEEC,IAAAA,UAAU,EAAE,QAFd;AAGEC,IAAAA,KAAK,EAAE,GAHT;AAIEC,IAAAA,UAAU,EAAGC,MAAD,IAAY;AACtB,0BACE;AAAA,gCACE;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,aAAD;AACE,UAAA,SAAS,EAAC,mBADZ;AAEE,UAAA,OAAO,EAAE,MAAMT,YAAY,CAACS,MAAM,CAACC,GAAP,CAAWG,GAAZ;AAF7B;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,sBADF;AASD;AAdH,GAxBc,CAAhB;AA0CA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,2BACE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEf,UADR;AAEE,MAAA,uBAAuB,MAFzB;AAGE,MAAA,OAAO,EAAEM,OAHX;AAIE,MAAA,QAAQ,EAAEM,GAAG,IAAIA,GAAG,CAACG,GAJvB;AAKE,MAAA,QAAQ,EAAE,CALZ;AAME,MAAA,iBAAiB,MANnB;AAOE,MAAA,UAAU,EAAE,CAACJ,MAAD,EAASK,KAAT,KAAmB;AAC7BjB,QAAAA,OAAO,CAACkB,IAAR,CAAa,cAAcN,MAAM,CAACR,EAAlC;AACD;AATH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GA9EuBN,c;UAELN,W,EACDD,U,EACGE,W;;;KAJGK,c","sourcesContent":["import \"./productCatList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { deleteProducts, getProductCategories, getProducts } from \"../../redux/apiCalls\";\n\nexport default function ProductCatList() {\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const categories = useSelector((state) => state.categories)\n\n  useEffect(() => {\n\n    getProductCategories(dispatch)\n\n  }, [dispatch])\n\n\n  const handleDelete = (id) => {\n    deleteProducts(id, dispatch)\n  };\n\n  console.log(categories);\n\n\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 220 },\n    {\n      field: \"category\",\n      headerName: \"Category\",\n      width: 200,\n      renderCell: (params) => {\n        // console.log(params.row);\n        return (\n          <div className=\"productListItem\" min-width='100%'>\n            <img className=\"productListImg\" src={params.row.img} alt=\"\" />\n            {params.row.title}\n          </div>\n\n        );\n      },\n    },\n    { field: \"inStock\", headerName: \"Stock\", width: 150 },\n    { field: \"inventory\", headerName: \"Inventory\", width: 150 },\n    {\n      field: \"price\",\n      headerName: \"Price\",\n      width: 160,\n    },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <button className=\"productListEdit\">Edit</button>\n            <DeleteOutline\n              className=\"productListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"productList\">\n      <DataGrid\n        rows={categories}\n        disableSelectionOnClick\n        columns={columns}\n        getRowId={row => row._id}\n        pageSize={8}\n        checkboxSelection\n        onRowClick={(params, event) => {\n          history.push('/product/' + params.id)\n        }\n        }\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}