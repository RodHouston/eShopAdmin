{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const photoGallerySlice = createSlice({\n  name: 'gallery',\n  initialState: {\n    galleries: [],\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    //get all\n    getPhotoToGalleryStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getPhotoToGallerySuccess: (state, action) => {\n      console.log(action.payload);\n      state.isFetching = false;\n      state.galleries = action.payload;\n    },\n    getPhotoToGalleryFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //get delete\n    deletePhotoToGalleryStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deletePhotoToGallerySuccess: (state, action) => {\n      state.isFetching = false;\n      state.galleries.splice(state.galleries.findIndex(item => item._id === action.payload), 1);\n    },\n    deletePhotoToGalleryFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // update PhotoToGallery\n    updatePhotoToGalleryStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    updatePhotoToGallerySuccess: (state, action) => {\n      state.isFetching = false;\n      state.galleries[state.galleries.findIndex(item => item._id === action.payload.id)] = action.payload.photo;\n    },\n    updatePhotoToGalleryFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // Add PhotoToGallery\n    addPhotoToGalleryStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    addPhotoToGallerySuccess: (state, action) => {\n      state.isFetching = false;\n      state.galleries.push(action.payload);\n    },\n    addPhotoToGalleryFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  getPhotoToGalleryStart,\n  getPhotoToGallerySuccess,\n  getPhotoToGalleryFailure,\n  deletePhotoToGalleryStart,\n  deletePhotoToGallerySuccess,\n  deletePhotoToGalleryFailure,\n  updatePhotoToGallerySuccess,\n  updatePhotoToGalleryStart,\n  updatePhotoToGalleryFailure,\n  addPhotoToGallerySuccess,\n  addPhotoToGalleryStart,\n  addPhotoToGalleryFailure\n} = photoGallerySlice.actions;\nexport default photoGallerySlice.reducer;","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/photoGalleryRedux.js"],"names":["createSlice","photoGallerySlice","name","initialState","galleries","isFetching","error","reducers","getPhotoToGalleryStart","state","getPhotoToGallerySuccess","action","console","log","payload","getPhotoToGalleryFailure","deletePhotoToGalleryStart","deletePhotoToGallerySuccess","splice","findIndex","item","_id","deletePhotoToGalleryFailure","updatePhotoToGalleryStart","updatePhotoToGallerySuccess","id","photo","updatePhotoToGalleryFailure","addPhotoToGalleryStart","addPhotoToGallerySuccess","push","addPhotoToGalleryFailure","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\n\nexport const photoGallerySlice = createSlice({\n  name: 'gallery',\n  initialState:{\n      galleries: [],\n      isFetching: false,\n      error:false,\n  },\n  reducers: {\n      //get all\n    getPhotoToGalleryStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    getPhotoToGallerySuccess: (state, action) => {\n      console.log(action.payload);\n      state.isFetching = false\n      state.galleries = action.payload\n    },\n    getPhotoToGalleryFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n      //get delete\n    deletePhotoToGalleryStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    deletePhotoToGallerySuccess: (state, action) => {\n      state.isFetching = false\n      state.galleries.splice(\n          state.galleries.findIndex((item) => item._id === action.payload),\n          1\n      )\n    },\n    deletePhotoToGalleryFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n// update PhotoToGallery\n    updatePhotoToGalleryStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    updatePhotoToGallerySuccess: (state, action) => {\n      state.isFetching = false\n      state.galleries[\n        state.galleries.findIndex((item) => item._id === action.payload.id)\n      ] = action.payload.photo;\n    },\n\n    updatePhotoToGalleryFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n// Add PhotoToGallery\n    addPhotoToGalleryStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    addPhotoToGallerySuccess: (state, action) => {\n      state.isFetching = false\n      state.galleries.push(action.payload)\n    },\n\n    addPhotoToGalleryFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n  },\n});\n\nexport const { getPhotoToGalleryStart, getPhotoToGallerySuccess, getPhotoToGalleryFailure, \n  deletePhotoToGalleryStart, deletePhotoToGallerySuccess, deletePhotoToGalleryFailure,\nupdatePhotoToGallerySuccess, updatePhotoToGalleryStart,updatePhotoToGalleryFailure, addPhotoToGallerySuccess, addPhotoToGalleryStart, addPhotoToGalleryFailure} = photoGallerySlice.actions;\n\nexport default photoGallerySlice.reducer;"]},"metadata":{},"sourceType":"module"}