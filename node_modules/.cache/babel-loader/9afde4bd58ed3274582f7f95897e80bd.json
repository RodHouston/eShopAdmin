{"ast":null,"code":"var _jsxFileName = \"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/userList/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { userRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { userRequest } from \"../../RequestMethods\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n\n  const [data, setData] = useState(userRows);\n  const [users, setUsers] = useState([]);\n\n  const handleDelete = id => {\n    setData(data.filter(item => item.id !== id));\n  };\n\n  useEffect(() => {\n    const getUsers = async () => {\n      try {\n        const res = await userRequest.get(\"/users\");\n        setUsers(res.data);\n      } catch (error) {}\n    };\n\n    getUsers();\n  }, []);\n  console.log(users[0].email);\n  const columns = [{\n    field: \"id\",\n    headerName: \"ID\",\n    width: 90\n  }, {\n    field: \"user\",\n    headerName: \"User\",\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: users.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), users.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: users.email,\n    headerName: \"Email\",\n    width: 200\n  }, {\n    field: \"status\",\n    headerName: \"Status\",\n    width: 120\n  }, {\n    field: \"transaction\",\n    headerName: \"Transaction Volume\",\n    width: 160\n  }, {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/user/\" + users._id,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"userListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"userListDelete\",\n          onClick: () => handleDelete(users._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: data,\n      disableSelectionOnClick: true,\n      columns: columns,\n      pageSize: 8,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserList, \"VgFh+C+Hk+WzYu/5HE5+3i8v54s=\");\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/userList/UserList.jsx"],"names":["DataGrid","DeleteOutline","userRows","Link","useEffect","useState","userRequest","UserList","data","setData","users","setUsers","handleDelete","id","filter","item","getUsers","res","get","error","console","log","email","columns","field","headerName","width","renderCell","params","img","username","_id"],"mappings":"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","sourcesContent":["import \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { userRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {  userRequest } from \"../../RequestMethods\";\n\nexport default function UserList() {\n  const [data, setData] = useState(userRows);\n  const [users, setUsers] = useState([]);\n\n  const handleDelete = (id) => {\n    setData(data.filter((item) => item.id !== id));\n  };\n\n\n  useEffect(() => {\n     \n    const getUsers = async ()=>{\n        try {\n            const res = await userRequest.get(\"/users\")\n           \n            setUsers(res.data)\n            \n        } catch (error) {\n            \n        }\n    }\n    \n    getUsers()\n  }, [])\nconsole.log(users[0].email);\n\n  \n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 90 },\n    {\n      field: \"user\",\n      headerName: \"User\",\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"userListUser\">\n            <img className=\"userListImg\" src={users.img} alt=\"\" />\n            {users.username}\n          </div>\n        );\n      },\n    },\n    { field: users.email, headerName: \"Email\", width: 200 },\n    {\n      field: \"status\",\n      headerName: \"Status\",\n      width: 120,\n    },\n    {\n      field: \"transaction\",\n      headerName: \"Transaction Volume\",\n      width: 160,\n    },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={\"/user/\" + users._id}>\n              <button className=\"userListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"userListDelete\"\n              onClick={() => handleDelete(users._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"userList\">\n      <DataGrid\n        rows={data}\n        disableSelectionOnClick\n        columns={columns}\n        pageSize={8}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}