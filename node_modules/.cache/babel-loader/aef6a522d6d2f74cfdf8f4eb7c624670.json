{"ast":null,"code":"import { publicRequest, userRequest } from \"../RequestMethods\";\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, getProductFailure, getProductStart, getProductSuccess, updateProductFailure, updateProductStart, updateProductSuccess, addProductSuccess, addProductStart, addProductFailure } from \"./productRedux\";\nimport { loginFailure, loginStart, loginSuccess, logOut } from \"./userRedux\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (error) {\n    dispatch(loginFailure());\n  }\n};\nexport const logout = async dispatch => {\n  try {\n    // const res = await publicRequest.post(\"/auth/logout\", user)\n    dispatch(logOut());\n  } catch (error) {}\n};\nexport const getProducts = async dispatch => {\n  dispatch(getProductStart());\n\n  try {\n    const res = await publicRequest.get(\"/products\");\n    dispatch(getProductSuccess(res.data));\n  } catch (error) {\n    dispatch(getProductFailure());\n  }\n};\nexport const updateProducts = async (id, product, dispatch) => {\n  dispatch(updateProductStart());\n\n  try {\n    //update\n    // const res = await userRequest.update(`/products/${id}`)\n    dispatch(updateProductSuccess({\n      id,\n      product\n    }));\n  } catch (error) {\n    dispatch(updateProductFailure());\n  }\n};\nexport const deleteProducts = async (id, product, dispatch) => {\n  dispatch(deleteProductStart());\n\n  try {\n    const res = await userRequest.delete(`/products/${id}`);\n    dispatch(deleteProductSuccess(id, product));\n  } catch (error) {\n    dispatch(deleteProductFailure());\n  }\n};\nexport const addProducts = async (product, dispatch) => {\n  dispatch(addProductStart());\n\n  try {\n    const res = await userRequest.post(`/products`, product);\n    dispatch(addProductSuccess(res.data));\n  } catch (error) {\n    dispatch(addProductFailure());\n  }\n};","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/apiCalls.js"],"names":["publicRequest","userRequest","deleteProductFailure","deleteProductStart","deleteProductSuccess","getProductFailure","getProductStart","getProductSuccess","updateProductFailure","updateProductStart","updateProductSuccess","addProductSuccess","addProductStart","addProductFailure","loginFailure","loginStart","loginSuccess","logOut","login","dispatch","user","res","post","data","error","logout","getProducts","get","updateProducts","id","product","deleteProducts","delete","addProducts"],"mappings":"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","sourcesContent":["import { publicRequest, userRequest } from \"../RequestMethods\"\nimport { deleteProductFailure, deleteProductStart, deleteProductSuccess, \n    getProductFailure, getProductStart, getProductSuccess,\n    updateProductFailure, updateProductStart, updateProductSuccess,\naddProductSuccess,addProductStart, addProductFailure } from \"./productRedux\"\nimport { loginFailure, loginStart, loginSuccess, logOut } from \"./userRedux\"\n\nexport const login = async (dispatch, user)=>{\n    dispatch(loginStart())\n    try {\n        const res = await publicRequest.post(\"/auth/login\", user)\n        dispatch(loginSuccess(res.data));\n    } catch (error) {\n        dispatch(loginFailure())\n    }\n}\nexport const logout = async (dispatch)=>{    \n    try {\n        // const res = await publicRequest.post(\"/auth/logout\", user)\n        dispatch(logOut());\n    } catch (error) {\n        \n    }\n}\n\n\nexport const getProducts = async (dispatch)=>{\n    dispatch(getProductStart())\n    try {\n        const res = await publicRequest.get(\"/products\")\n        dispatch(getProductSuccess(res.data));\n    } catch (error) {\n        dispatch(getProductFailure())\n    }\n}\n\n\nexport const updateProducts = async (id, product, dispatch)=>{\n    dispatch(updateProductStart())\n    try {\n        //update\n        // const res = await userRequest.update(`/products/${id}`)\n        dispatch(updateProductSuccess({id, product}));\n    } catch (error) {\n        dispatch(updateProductFailure())\n    }\n}\n\n\nexport const deleteProducts = async (id, product, dispatch)=>{\n    dispatch(deleteProductStart())\n    try {\n        const res = await userRequest.delete(`/products/${id}`)\n        dispatch(deleteProductSuccess(id, product));\n    } catch (error) {\n        dispatch(deleteProductFailure())\n    }\n}\n\nexport const addProducts = async ( product, dispatch)=>{\n    dispatch(addProductStart())\n    try {\n        const res = await userRequest.post(`/products`, product)\n        dispatch(addProductSuccess(res.data));\n    } catch (error) {\n        dispatch(addProductFailure())\n    }\n}"]},"metadata":{},"sourceType":"module"}