{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    currentUser: null,\n    editUser: null,\n    users: [],\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    loginStart: state => {\n      state.isFetching = true;\n    },\n    loginSuccess: (state, action) => {\n      console.log(\"inside log in \");\n      state.isFetching = false;\n      state.currentUser = action.payload;\n    },\n    loginFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    logOut: state => {\n      state.currentUser = null;\n    },\n    //get all\n    getUsersStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getUsersSuccess: (state, action) => {\n      // console.log('here');\n      // console.log(action.payload);\n      state.isFetching = false;\n      state.users = action.payload;\n    },\n    getUsersFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //GET ONE USER BY ID\n    getUserByIdStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getUserByIdSuccess: (state, action) => {\n      state.isFetching = false;\n      state.editUser = action.payload;\n    },\n    getUserByIdFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //get delete\n    deleteUserStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteUserSuccess: (state, action) => {\n      state.isFetching = false;\n      state.users.splice(state.users.findIndex(item => item._id === action.payload), 1);\n    },\n    deleteUserFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // update user\n    updateUserStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    updateUserSuccess: (state, action) => {\n      state.isFetching = false;\n      state.users[state.users.findIndex(item => item._id === action.payload.id)] = action.payload.product;\n    },\n    updateUserFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  loginStart,\n  loginSuccess,\n  loginFailure,\n  logOut,\n  getUsersSuccess,\n  getUsersStart,\n  getUsersFailure,\n  getUserByIdSuccess,\n  getUserByIdStart,\n  getUserByIdFailure,\n  deleteUserSuccess,\n  deleteUserStart,\n  deleteUserFailure,\n  updateUserStart,\n  updateUserSuccess,\n  updateUserFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/userRedux.js"],"names":["createSlice","userSlice","name","initialState","currentUser","editUser","users","isFetching","error","reducers","loginStart","state","loginSuccess","action","console","log","payload","loginFailure","logOut","getUsersStart","getUsersSuccess","getUsersFailure","getUserByIdStart","getUserByIdSuccess","getUserByIdFailure","deleteUserStart","deleteUserSuccess","splice","findIndex","item","_id","deleteUserFailure","updateUserStart","updateUserSuccess","id","product","updateUserFailure","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice  } from \"@reduxjs/toolkit\";\n\nconst userSlice = createSlice({\n    name: \"user\",\n    initialState: {\n       currentUser: null,\n       editUser: null,\n       users: [],\n       isFetching: false,\n       error: false\n    },\n    reducers:{\n        loginStart:(state)=>{\n            state.isFetching=true;\n        },\n        loginSuccess:(state, action)=>{\n          console.log(\"inside log in \");\n            state.isFetching=false;\n            state.currentUser=action.payload;\n        },\n        loginFailure:(state)=>{\n            state.isFetching=false;\n            state.error = true;\n        },    \n        \n        logOut: (state) => {\n            state.currentUser = null\n        },\n     //get all\n     getUsersStart: (state) => {\n        state.isFetching = true     \n        state.error = false\n      },\n      getUsersSuccess: (state, action) => {\n        // console.log('here');\n        // console.log(action.payload);\n        state.isFetching = false\n        state.users = action.payload\n      },\n      getUsersFailure: (state) => {\n        state.isFetching = false\n        state.error = true\n      },\n      //GET ONE USER BY ID\n      getUserByIdStart: (state) => {\n        state.isFetching = true     \n        state.error = false\n      },\n      getUserByIdSuccess: (state, action) => {       \n        state.isFetching = false\n        state.editUser = action.payload\n      },\n      getUserByIdFailure: (state) => {\n        state.isFetching = false\n        state.error = true\n      },\n        //get delete\n      deleteUserStart: (state) => {\n        state.isFetching = true \n        state.error = false\n      },\n      deleteUserSuccess: (state, action) => {\n        state.isFetching = false\n        state.users.splice(\n            state.users.findIndex((item) => item._id === action.payload),\n            1\n        )\n      },\n      deleteUserFailure: (state) => {\n        state.isFetching = false\n        state.error = true\n      },\n  \n  // update user\n      updateUserStart: (state) => {\n        state.isFetching = true \n        state.error = false\n      },\n      updateUserSuccess: (state, action) => {\n        state.isFetching = false\n        state.users[\n          state.users.findIndex((item) => item._id === action.payload.id)\n        ] = action.payload.product;\n      },\n  \n      updateUserFailure: (state) => {\n        state.isFetching = false\n        state.error = true\n      },\n  \n  \n    },\n  });\nexport const { loginStart, loginSuccess, loginFailure , logOut, getUsersSuccess,getUsersStart,getUsersFailure, getUserByIdSuccess, getUserByIdStart, getUserByIdFailure,\ndeleteUserSuccess,deleteUserStart, deleteUserFailure, updateUserStart, updateUserSuccess, updateUserFailure} = userSlice.actions;\nexport default userSlice.reducer;"]},"metadata":{},"sourceType":"module"}