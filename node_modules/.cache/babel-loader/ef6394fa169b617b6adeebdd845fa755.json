{"ast":null,"code":"var _jsxFileName = \"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/userList/UserList.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { userRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { userRequest } from \"../../RequestMethods\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../../redux/apiCalls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserList() {\n  _s();\n\n  const [data, setData] = useState(userRows);\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.user.users);\n  console.log(users);\n  useEffect(() => {\n    getUsers(dispatch);\n  }, [dispatch]);\n  console.log(users);\n\n  const handleDelete = id => {\n    setData(data.filter(item => item._id !== id));\n  };\n\n  const columns = [{\n    field: \"_id\",\n    headerName: \"ID\",\n    width: 90\n  }, {\n    field: \"user\",\n    headerName: \"User\",\n    width: 200,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userListUser\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"userListImg\",\n          src: params.row.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), params.row.username]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this);\n    }\n  }, {\n    field: \"email\",\n    headerName: \"Email\",\n    width: 200\n  }, {\n    field: \"isAdmin\",\n    headerName: \"isAdmin\",\n    width: 120\n  }, // {\n  //   field: \"transaction\",\n  //   headerName: \"Transaction Volume\",\n  //   width: 160,\n  // },\n  {\n    field: \"action\",\n    headerName: \"Action\",\n    width: 150,\n    renderCell: params => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: {\n            pathname: \"/user/\" + params.row._id,\n            query: {\n              user: params.row\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"userListEdit\",\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DeleteOutline, {\n          className: \"userListDelete\",\n          onClick: () => handleDelete(params.row._id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"userList\",\n    children: /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: users,\n      disableSelectionOnClick: true,\n      columns: columns,\n      getRowId: row => row._id,\n      pageSize: 8,\n      checkboxSelection: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(UserList, \"P0E8WE+7Ym14QPTQGObHgCMzyG4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/userList/UserList.jsx"],"names":["DataGrid","DeleteOutline","userRows","Link","useEffect","useState","userRequest","useDispatch","useSelector","getUsers","UserList","data","setData","dispatch","users","state","user","console","log","handleDelete","id","filter","item","_id","columns","field","headerName","width","renderCell","params","row","img","username","pathname","query"],"mappings":"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","sourcesContent":["import \"./userList.css\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { DeleteOutline } from \"@material-ui/icons\";\nimport { userRows } from \"../../dummyData\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport {  userRequest } from \"../../RequestMethods\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsers } from \"../../redux/apiCalls\";\n\nexport default function UserList() {\n  const [data, setData] = useState(userRows);\n  \n  const dispatch = useDispatch()\n\n  const users = useSelector((state) => state.user.users)\n\n\nconsole.log(users);\n\n  useEffect(() => {\n    getUsers(dispatch)\n \n  }, [dispatch ])\n\nconsole.log(users);\nconst handleDelete = (id) => {\n  setData(data.filter((item) => item._id !== id));\n};\n\n  const columns = [\n    { field: \"_id\", headerName: \"ID\", width: 90 },\n    {\n      field: \"user\",\n      headerName: \"User\",\n      width: 200,\n      renderCell: (params) => {\n        return (\n          <div className=\"userListUser\">\n            <img className=\"userListImg\" src={params.row.img} alt=\"\" />\n            {params.row.username}\n          </div>\n        );\n      },\n    },\n    { field: \"email\", headerName: \"Email\", width: 200 },\n    {\n      field: \"isAdmin\",\n      headerName: \"isAdmin\",\n      width: 120,\n    },\n    // {\n    //   field: \"transaction\",\n    //   headerName: \"Transaction Volume\",\n    //   width: 160,\n    // },\n    {\n      field: \"action\",\n      headerName: \"Action\",\n      width: 150,\n      renderCell: (params) => {\n        return (\n          <>\n            <Link to={{pathname: \"/user/\" + params.row._id, query: {user : params.row}}}>\n              <button className=\"userListEdit\">Edit</button>\n            </Link>\n            <DeleteOutline\n              className=\"userListDelete\"\n              onClick={() => handleDelete(params.row._id)}\n            />\n          </>\n        );\n      },\n    },\n  ];\n\n  return (\n    <div className=\"userList\">\n      <DataGrid\n        rows={users}\n        disableSelectionOnClick\n        columns={columns}\n        getRowId ={row=>row._id }\n        pageSize={8}\n        checkboxSelection\n      />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}