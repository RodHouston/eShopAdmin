{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState: {\n    products: [],\n    isFetching: false,\n    error: false\n  },\n  reducers: {\n    //get all\n    getProductStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    getProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products = action.payload;\n    },\n    getProductFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    //get delete\n    deleteProductStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    deleteProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products.splice(state.products.findIndex(item => item._id === action.payload), 1);\n    },\n    deleteProductFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // update product\n    updateProductStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    updateProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products[state.products.findIndex(item => item._id === action.payload.id)] = action.payload.user;\n    },\n    updateProductFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    },\n    // Add product\n    addProductStart: state => {\n      state.isFetching = true;\n      state.error = false;\n    },\n    addProductSuccess: (state, action) => {\n      state.isFetching = false;\n      state.products.push(action.payload);\n    },\n    addProductFailure: state => {\n      state.isFetching = false;\n      state.error = true;\n    }\n  }\n});\nexport const {\n  getProductStart,\n  getProductSuccess,\n  getProductFailure,\n  deleteProductStart,\n  deleteProductSuccess,\n  deleteProductFailure,\n  updateProductSuccess,\n  updateProductStart,\n  updateProductFailure,\n  addProductSuccess,\n  addProductStart,\n  addProductFailure\n} = productSlice.actions;\nexport default productSlice.reducer;","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/redux/productRedux.js"],"names":["createSlice","productSlice","name","initialState","products","isFetching","error","reducers","getProductStart","state","getProductSuccess","action","payload","getProductFailure","deleteProductStart","deleteProductSuccess","splice","findIndex","item","_id","deleteProductFailure","updateProductStart","updateProductSuccess","id","user","updateProductFailure","addProductStart","addProductSuccess","push","addProductFailure","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState:{\n      products: [],\n      isFetching: false,\n      error:false,\n  },\n  reducers: {\n      //get all\n    getProductStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    getProductSuccess: (state, action) => {\n      state.isFetching = false\n      state.products = action.payload\n    },\n    getProductFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n      //get delete\n    deleteProductStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    deleteProductSuccess: (state, action) => {\n      state.isFetching = false\n      state.products.splice(\n          state.products.findIndex((item) => item._id === action.payload),\n          1\n      )\n    },\n    deleteProductFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n// update product\n    updateProductStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    updateProductSuccess: (state, action) => {\n      state.isFetching = false\n      state.products[\n        state.products.findIndex((item) => item._id === action.payload.id)\n      ] = action.payload.user;\n    },\n\n    updateProductFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n\n// Add product\n    addProductStart: (state) => {\n      state.isFetching = true \n      state.error = false\n    },\n    addProductSuccess: (state, action) => {\n      state.isFetching = false\n      state.products.push(action.payload)\n    },\n\n    addProductFailure: (state) => {\n      state.isFetching = false\n      state.error = true\n    },\n  },\n});\n\nexport const { getProductStart, getProductSuccess, getProductFailure, \n  deleteProductStart, deleteProductSuccess, deleteProductFailure,\nupdateProductSuccess, updateProductStart,updateProductFailure, addProductSuccess, addProductStart, addProductFailure} = productSlice.actions;\n\nexport default productSlice.reducer;"]},"metadata":{},"sourceType":"module"}