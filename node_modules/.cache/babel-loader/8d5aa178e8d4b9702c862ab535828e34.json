{"ast":null,"code":"var _jsxFileName = \"/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/photoGallery/PhotoGallery.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"./photoGallery.css\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from \"../../firebase\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPhotoToGallery, getPhotoGalleries, updatePhotoToGallery } from '../../redux/apiCalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PhotoGallery() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [cat, setCat] = useState([]);\n  const [files, setFiles] = useState([]);\n  const [inputs, setInputs] = useState({});\n  const [photos, setPhotos] = useState([]);\n  const [filesPre, setFilesPre] = useState([]);\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [galTitlePre, setGalTitlePre] = useState('');\n  const [isNewGallery, setIsNewGallery] = useState(false);\n  const allGalleries = useSelector(state => state.gallery.galleries);\n  const [gallery, setGallery] = useState({\n    galTitle: '',\n    galDescription: '',\n    photos: []\n  });\n  const [photo, setPhoto] = useState({\n    phoTitle: \"\",\n    phoDescription: \"\",\n    source: \"\",\n    createdDated: ''\n  });\n\n  const handleChange = e => {\n    setInputs(prev => {\n      return { ...prev,\n        [e.target.name]: e.target.value\n      };\n    });\n  };\n\n  const handleGalleryTitle = e => {\n    let gal = gallery;\n    gal.galTitle = e.target.value;\n    setGalTitlePre(e.target.value);\n    setGallery(gal);\n  };\n\n  const handleGalleryDesc = e => {\n    let gal = gallery;\n    gal.galDescription = e.target.value;\n    setGalTitlePre(e.target.value);\n    setGallery(gal);\n  };\n\n  const handlePhotoTitle = (e, idx) => {\n    console.log(idx);\n    console.log(photos[idx]);\n    let pho = { ...photo\n    };\n    pho.phoTitle = e.target.value;\n    setGalTitlePre(e.target.value);\n    console.log(pho);\n    const newPhotos = photos;\n    newPhotos[idx] = pho;\n    console.log(\"1st one\");\n    console.log(newPhotos[0]);\n    console.log(\"2nd one\");\n    console.log(newPhotos[1]);\n    console.log(newPhotos);\n    setPhotos(newPhotos);\n    pho = {};\n  };\n\n  const handlePhotoDesc = (e, idx) => {\n    let pho = photo;\n    pho.phoDescription = e.target.value;\n    setGalTitlePre(e.target.value);\n    const newPhotos = photos;\n    newPhotos[idx] = pho;\n    setPhotos(newPhotos);\n    pho = {};\n  };\n\n  const handlePhoto = e => {\n    console.log(e.target.files);\n    let mainPre = [];\n\n    if (e.target.value != null) {\n      let mP = [];\n      mP = Object.values(e.target.files);\n      mP.map(file => {\n        mainPre.push(URL.createObjectURL(file));\n      });\n      console.log(mainPre);\n      setFiles(e.target.files);\n      setGalTitlePre(e.target.value);\n      setFilesPre(mainPre);\n    } else {\n      return;\n    }\n  };\n\n  const addtoGallery = gal => {\n    console.log(\"here\");\n    console.log(gal);\n    setIsUpdate(true);\n    setShowModal(prev => !prev);\n    setGallery(gal);\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    setShowModal(prev => !prev);\n    let mainPho = '';\n    let isSuccesful = false;\n    console.log(photos);\n    console.log(files);\n    let fil = files;\n    const fileName = fil === null || fil === void 0 ? void 0 : fil.name;\n    const storage = getStorage(app);\n    const StorageRef = ref(storage, `images/gallery/${gallery.galTitle}/${fileName}`); // const uploadTask = uploadBytesResumable(StorageRef, fil);\n    // uploadTask.on('state_changed', (snapshot) => {\n    //   const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    //   console.log('Upload is ' + progress + '% done');\n    //   switch (snapshot.state) {\n    //     case 'paused':\n    //       console.log('Upload is paused');\n    //       break;\n    //     case 'running':\n    //       console.log('Upload is running');\n    //       break;\n    //     default:\n    //   }\n    //   console.log('Upload is ' + progress + '% done');\n    // },\n    //   (error) => {\n    //     // Handle unsuccessful uploads\n    //     console.log(error);\n    //   },\n    //   async () => {\n    //     await getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n    //       console.log('File available at', downloadURL);\n    //       mainPho = downloadURL\n    //       isSuccesful = true\n    //     });\n    //     if (isSuccesful) {\n    //       let now = new Date();\n    //       let month = (now.getMonth() + 1);\n    //       let day = now.getDate();\n    //       if (month < 10)\n    //         month = \"0\" + month;\n    //       if (day < 10)\n    //         day = \"0\" + day;\n    //       let today = now.getFullYear() + '-' + month + '-' + day;\n    //       const pho = photo\n    //       pho.source = mainPho\n    //       pho.createdDated = today\n    //       const photos = []\n    //       gallery.photos.forEach(photo => {\n    //         photos.push(photo)\n    //       })\n    //       photos.push(pho)\n    //       const newGal = {\n    //         ...gallery,\n    //         photos: photos\n    //       }\n    //       if (isUpdate) {\n    //         await updatePhotoToGallery(gallery._id, newGal, dispatch).then((res) => {\n    //           console.log(\"Success, we need to REFRSH\");\n    //         })\n    //       } else\n    //         if (isNewGallery) {\n    //           // await addPhotoToGallery(newGal, dispatch).then((res) => {\n    //           //   console.log(\"Success, we need to REFRSH\");\n    //           // })\n    //         }\n    //     }\n    //   });\n  };\n\n  useEffect(() => {\n    const getGalleries = () => {\n      getPhotoGalleries(dispatch);\n    };\n\n    getGalleries();\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal\",\n        onClick: e => {\n          e.target === e.currentTarget && setShowModal(prev => !prev);\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modalContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"addProductTitle\",\n            children: \"Photo Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            multiple: true,\n            name: \"source\",\n            onChange: handlePhoto\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), filesPre === null || filesPre === void 0 ? void 0 : filesPre.map((filePre, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addPhotoDiv\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addPhotoInfo\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addProductItem\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Photo Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"title\",\n                  type: \"text\",\n                  placeholder: \"Apple Airpods\",\n                  onChange: e => handlePhotoTitle(e, idx)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"addProductItem\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Photo Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"desc\",\n                  type: \"text\",\n                  name: \"description\",\n                  placeholder: \"Description\",\n                  onChange: e => handlePhotoDesc(e, idx)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"modalImageDiv\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"modalImage\",\n                src: filePre\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 21\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 19\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleClick,\n            className: \"addProductButton\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"addProductTitle\",\n        children: \"ADD GALLERY\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"newProduct\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"addProductForm\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"addProductItem\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addProductItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Gallery Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"title\",\n                type: \"text\",\n                placeholder: \"Apple Airpods\",\n                onChange: handleGalleryTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"addProductItem\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Gallery Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                name: \"desc\",\n                type: \"text\",\n                name: \"description\",\n                placeholder: \"Description\",\n                onChange: handleGalleryDesc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"galleryPreview\",\n        children: allGalleries === null || allGalleries === void 0 ? void 0 : allGalleries.map((gals, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [\"Gallery Title: \", photo.phoTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 55\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: gals.galTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              addtoGallery(gals);\n            },\n            children: [\"Add to \", gals.galTitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), gals.photos.map((photo, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"galleryImageDivs\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"galleryImages\",\n              src: photo.source\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 19\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 17\n          }, this))]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PhotoGallery, \"SJ97LmvHfr/5IKaDK8PQHtXP76A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PhotoGallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"PhotoGallery\");","map":{"version":3,"sources":["/Users/roderickhouston/Desktop/GA Projects/eCommerceAdmin/src/pages/photoGallery/PhotoGallery.jsx"],"names":["useEffect","useState","getStorage","ref","uploadBytesResumable","getDownloadURL","app","useDispatch","useSelector","addPhotoToGallery","getPhotoGalleries","updatePhotoToGallery","PhotoGallery","dispatch","cat","setCat","files","setFiles","inputs","setInputs","photos","setPhotos","filesPre","setFilesPre","isUpdate","setIsUpdate","showModal","setShowModal","galTitlePre","setGalTitlePre","isNewGallery","setIsNewGallery","allGalleries","state","gallery","galleries","setGallery","galTitle","galDescription","photo","setPhoto","phoTitle","phoDescription","source","createdDated","handleChange","e","prev","target","name","value","handleGalleryTitle","gal","handleGalleryDesc","handlePhotoTitle","idx","console","log","pho","newPhotos","handlePhotoDesc","handlePhoto","mainPre","mP","Object","values","map","file","push","URL","createObjectURL","addtoGallery","handleClick","preventDefault","mainPho","isSuccesful","fil","fileName","storage","StorageRef","getGalleries","currentTarget","filePre","gals"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./photoGallery.css\";\nimport { getStorage, ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport app from \"../../firebase\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addPhotoToGallery, getPhotoGalleries, updatePhotoToGallery } from '../../redux/apiCalls'\n\n\n\n\nexport default function PhotoGallery() {\n\n  const dispatch = useDispatch()\n  const [cat, setCat] = useState([])\n  const [files, setFiles] = useState([])\n  const [inputs, setInputs] = useState({})\n  const [photos, setPhotos] = useState([])\n  const [filesPre, setFilesPre] = useState([])\n  const [isUpdate, setIsUpdate] = useState(false)\n  const [showModal, setShowModal] = useState(false)\n  const [galTitlePre, setGalTitlePre] = useState('')\n  const [isNewGallery, setIsNewGallery] = useState(false)\n  const allGalleries = useSelector(state => state.gallery.galleries)\n\n  const [gallery, setGallery] = useState({\n    galTitle: '',\n    galDescription: '',\n    photos: []\n  })\n  const [photo, setPhoto] = useState({\n    phoTitle: \"\",\n    phoDescription: \"\",\n    source: \"\",\n    createdDated: ''\n  })\n  const handleChange = (e) => {\n    setInputs(prev => {\n      return { ...prev, [e.target.name]: e.target.value }\n    })\n  }\n  const handleGalleryTitle = (e) => {\n    let gal = gallery\n    gal.galTitle = e.target.value\n    setGalTitlePre(e.target.value)\n    setGallery(gal)\n  }\n  const handleGalleryDesc = (e) => {\n    let gal = gallery\n    gal.galDescription = e.target.value\n    setGalTitlePre(e.target.value)\n    setGallery(gal)\n  }\n  const handlePhotoTitle = (e, idx) => {\n\n    console.log(idx);\n    console.log(photos[idx])\n    \n    let pho = {...photo}\n    pho.phoTitle = e.target.value\n    setGalTitlePre(e.target.value)\n    console.log(pho);\n    const newPhotos = photos\n    newPhotos[idx] = pho\n    console.log(\"1st one\");\n    console.log(newPhotos[0])\n    console.log(\"2nd one\");\n    console.log(newPhotos[1])\n    console.log(newPhotos);\n    setPhotos(newPhotos)\n    pho = {}\n  }\n\n  const handlePhotoDesc = (e, idx) => {\n    let pho = photo\n\n    pho.phoDescription = e.target.value\n    setGalTitlePre(e.target.value)\n    const newPhotos = photos\n    newPhotos[idx] = pho\n    setPhotos(newPhotos)\n    pho = {}\n  }\n\n\n  const handlePhoto = (e) => {\n    console.log(e.target.files);\n    let mainPre = []\n    if (e.target.value != null) {\n      let mP = []\n      mP = Object.values(e.target.files)\n      mP.map(file => {\n        mainPre.push(URL.createObjectURL(file))\n      })\n      console.log(mainPre);\n      setFiles(e.target.files)\n      setGalTitlePre(e.target.value)\n      setFilesPre(mainPre)\n    } else {\n      return\n    }\n  }\n  const addtoGallery = (gal) => {\n    console.log(\"here\");\n    console.log(gal);\n    setIsUpdate(true)\n    setShowModal(prev => !prev)\n    setGallery(gal)\n  }\n\n  const handleClick = (e) => {\n    e.preventDefault()\n    setShowModal(prev => !prev)\n    let mainPho = ''\n    let isSuccesful = false\n    console.log(photos);\n    console.log(files);\n\n    let fil = files\n    const fileName = fil?.name;\n    const storage = getStorage(app)\n    const StorageRef = ref(storage, `images/gallery/${gallery.galTitle}/${fileName}`)\n\n\n    // const uploadTask = uploadBytesResumable(StorageRef, fil);\n    // uploadTask.on('state_changed', (snapshot) => {\n    //   const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n    //   console.log('Upload is ' + progress + '% done');\n    //   switch (snapshot.state) {\n    //     case 'paused':\n    //       console.log('Upload is paused');\n    //       break;\n    //     case 'running':\n    //       console.log('Upload is running');\n    //       break;\n    //     default:\n    //   }\n    //   console.log('Upload is ' + progress + '% done');\n    // },\n    //   (error) => {\n    //     // Handle unsuccessful uploads\n    //     console.log(error);\n    //   },\n    //   async () => {\n    //     await getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n    //       console.log('File available at', downloadURL);\n    //       mainPho = downloadURL\n    //       isSuccesful = true\n    //     });\n    //     if (isSuccesful) {\n    //       let now = new Date();\n    //       let month = (now.getMonth() + 1);\n    //       let day = now.getDate();\n    //       if (month < 10)\n    //         month = \"0\" + month;\n    //       if (day < 10)\n    //         day = \"0\" + day;\n\n    //       let today = now.getFullYear() + '-' + month + '-' + day;\n\n    //       const pho = photo\n    //       pho.source = mainPho\n    //       pho.createdDated = today\n    //       const photos = []\n    //       gallery.photos.forEach(photo => {\n    //         photos.push(photo)\n    //       })\n    //       photos.push(pho)\n\n    //       const newGal = {\n    //         ...gallery,\n    //         photos: photos\n    //       }\n\n    //       if (isUpdate) {\n    //         await updatePhotoToGallery(gallery._id, newGal, dispatch).then((res) => {\n    //           console.log(\"Success, we need to REFRSH\");\n    //         })\n    //       } else\n    //         if (isNewGallery) {\n    //           // await addPhotoToGallery(newGal, dispatch).then((res) => {\n    //           //   console.log(\"Success, we need to REFRSH\");\n    //           // })\n    //         }\n    //     }\n    //   });\n\n  }\n\n  useEffect(() => {\n    const getGalleries = () => {\n      getPhotoGalleries(dispatch)\n    }\n    getGalleries()\n  }, [dispatch]);\n\n  return (\n    <>\n      <div className=\"main\">\n        {showModal &&\n          <div className=\"modal\" onClick={(e) => {\n            e.target === e.currentTarget &&\n              setShowModal(prev => !prev);\n          }} >\n            <div className=\"modalContent\">\n              <h1 className=\"addProductTitle\">Photo Details</h1>\n              <input type=\"file\" multiple name='source' onChange={handlePhoto} />\n\n              {\n                filesPre?.map((filePre, idx) => (\n\n                  <div key={idx} className=\"addPhotoDiv\">\n                    <div className=\"addPhotoInfo\">\n                      <div className=\"addProductItem\">\n                        <label>Photo Title</label>\n                        <input name='title' type=\"text\" placeholder=\"Apple Airpods\" onChange={(e) => handlePhotoTitle(e, idx)} />\n                      </div>\n                      <div className=\"addProductItem\" >\n                        <label>Photo Description</label>\n                        <input name='desc' type=\"text\" name='description' placeholder=\"Description\" onChange={(e) => handlePhotoDesc(e, idx)} />\n                      </div>\n                    </div>\n                    <div className=\"modalImageDiv\">\n                      <img className='modalImage' src={filePre} />\n                    </div>\n                  </div>\n\n                ))\n              }\n              <button onClick={handleClick} className=\"addProductButton\">Create</button>\n            </div>\n          </div>\n        }\n        <h1 className=\"addProductTitle\">ADD GALLERY</h1>\n        <div className=\"newProduct\">\n          <form className=\"addProductForm\">\n            <div className=\"addProductItem\">\n              <div className=\"addProductItem\">\n                <label>Gallery Name</label>\n                <input name='title' type=\"text\" placeholder=\"Apple Airpods\" onChange={handleGalleryTitle} />\n              </div>\n              <div className=\"addProductItem\">\n                <label>Gallery Description</label>\n                <input name='desc' type=\"text\" name='description' placeholder=\"Description\" onChange={handleGalleryDesc} />\n              </div>\n            </div>\n          </form>\n\n        </div>\n        <div className=\"galleryPreview\">\n\n          {allGalleries?.map((gals, idx) => (\n            <div key={idx}>\n              <h2>Gallery Title: {photo.phoTitle}</h2><br />\n              <h4>{gals.galTitle}</h4>\n              <button onClick={(e) => { addtoGallery(gals) }}>Add to {gals.galTitle}</button>\n\n              {gals.photos.map((photo, idx) => (\n                <div className='galleryImageDivs' key={idx}>\n                  <img className=\"galleryImages\" src={photo.source} />\n                </div>\n              ))\n              }\n            </div>\n          ))\n          }\n        </div>\n      </div>\n\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}